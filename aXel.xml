<?xml version="1.0"?>
<RBProject version="2011r4.2" FormatVersion="2" MinIDEVersion="20070100">
<block type="Project" ID="0">
 <ProjectSavedInVers>2011.042</ProjectSavedInVers>
 <ProjMgrUser></ProjMgrUser>
 <ProjMgrServer></ProjMgrServer>
 <MajorVersion>1</MajorVersion>
 <MinorVersion>0</MinorVersion>
 <SubVersion>0</SubVersion>
 <Release>0</Release>
 <NonRelease>0</NonRelease>
 <Region></Region>
 <ShortVersion></ShortVersion>
 <LongVersion></LongVersion>
 <InfoVersion></InfoVersion>
 <AutoIncVersion>0</AutoIncVersion>
 <DefaultViewID>531424011</DefaultViewID>
 <ProjectType>0</ProjectType>
 <DefaultLanguage>0</DefaultLanguage>
 <CurrentLanguage>0</CurrentLanguage>
 <DefaultEncoding>0</DefaultEncoding>
 <BuildFlags>16400</BuildFlags>
 <UseBuildsFolder>1</UseBuildsFolder>
 <WebApp>0</WebApp>
 <Icon>
 </Icon>
 <MacCreator></MacCreator>
 <BuildCarbonName>My Application</BuildCarbonName>
 <BuildCarbonMachOName>aXel</BuildCarbonMachOName>
 <BundleIdentifier></BundleIdentifier>
 <BuildSize>4194304</BuildSize>
 <BuildMinSize>2097152</BuildMinSize>
 <BuildSizeAsString>4096</BuildSizeAsString>
 <BuildMinSizeAsString>2048</BuildMinSizeAsString>
 <WinMDICaption></WinMDICaption>
 <BuildWinName>aXel.exe</BuildWinName>
 <BuildWinMDI>0</BuildWinMDI>
 <BuildWinCompanyName></BuildWinCompanyName>
 <BuildWinProductName></BuildWinProductName>
 <BuildWinInternalName></BuildWinInternalName>
 <UseGDIPlus>0</UseGDIPlus>
 <BuildLinuxX86Name>aXel</BuildLinuxX86Name>
 <DebuggerCommandLine></DebuggerCommandLine>
 <WebPort>0</WebPort>
 <WebProtocol>0</WebProtocol>
 <WebDebugPort>8080</WebDebugPort>
 <WebUseIntegratedBrowser>0</WebUseIntegratedBrowser>
 <WebLaunchString>Launching...</WebLaunchString>
 <WebHTMLHeader></WebHTMLHeader>
 <WebDisconnectString>The application has gone off-line. Please try again later.</WebDisconnectString>
</block>
<block type="Folder" ID="1161854083">
 <ObjName>Classes</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="Module" ID="102159890">
 <ObjName>AlternatingListBox</ObjName>
 <ObjContainerID>1161854083</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>ListBox</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <HookInstance>
  <ItemName>CellBackgroundPaint</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CellBackgroundPaint(g As Graphics, row As Integer, column As Integer) As Boolean</SourceLine>
   <SourceLine>if alternateRows then</SourceLine>
   <SourceLine>if row mod 2=0 and not me.selected(row) then</SourceLine>
   <SourceLine>g.foreColor=alternateColor</SourceLine>
   <SourceLine>g.fillrect 0,0,g.width,g.height</SourceLine>
   <SourceLine>elseif me.selected(row) then</SourceLine>
   <SourceLine>g.foreColor=rgb(30,30,100)</SourceLine>
   <SourceLine>g.fillrect 0,0,g.width,g.height</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>cellBackgroundPaint(g,row,column)</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </HookInstance>
 <Method>
  <ItemName>AutoSize</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub AutoSize(myWindow As Window)</SourceLine>
   <SourceLine>Dim i, j, maxWidths(-1), numRows, numCols, txtWidth, totWidth, winWidth As Integer</SourceLine>
   <SourceLine>Dim p As Picture</SourceLine>
   <SourceLine>Dim g As Graphics</SourceLine>
   <SourceLine>Dim s, theText As String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>p = new Picture(1, 1, 32)</SourceLine>
   <SourceLine>g = p.Graphics</SourceLine>
   <SourceLine>g.TextFont = me.TextFont</SourceLine>
   <SourceLine>g.TextSize = me.TextSize</SourceLine>
   <SourceLine>numCols = me.ColumnCount - 1</SourceLine>
   <SourceLine>redim maxWidths(numCols)</SourceLine>
   <SourceLine>numRows = me.ListCount - 1</SourceLine>
   <SourceLine>for i = 0 to numRows</SourceLine>
   <SourceLine>for j = 0 to numCols</SourceLine>
   <SourceLine>theText = me.cell(i, j)</SourceLine>
   <SourceLine>txtWidth = g.StringWidth(theText) + 5</SourceLine>
   <SourceLine>maxWidths(j) = Max(maxWidths(j), txtWidth)</SourceLine>
   <SourceLine>next j</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine>if me.HasHeading then</SourceLine>
   <SourceLine>for j = 0 to numCols</SourceLine>
   <SourceLine>theText = me.Heading(j)</SourceLine>
   <SourceLine>txtWidth = g.StringWidth(theText)</SourceLine>
   <SourceLine>maxWidths(j) = Max(maxWidths(j), txtWidth)</SourceLine>
   <SourceLine>maxWidths(j) = maxWidths(j) + 15</SourceLine>
   <SourceLine>totWidth = totWidth + maxWidths(j)</SourceLine>
   <SourceLine>next j</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>if numRows &gt; 16 then  // enough rows for scrollbar to show?</SourceLine>
   <SourceLine>totWidth = totwidth + 16</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>me.width = totWidth</SourceLine>
   <SourceLine>winWidth = myWindow.Width</SourceLine>
   <SourceLine>for i = 0 to numCols</SourceLine>
   <SourceLine>s = s + format(maxWidths(i), "#")</SourceLine>
   <SourceLine>if i &lt; numcols then s = s + ","</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine>me.ColumnWidths = s</SourceLine>
   <SourceLine>me.left = (winWidth - totWidth) / 2</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>myWindow As Window</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Hook>
  <ItemName>cellBackgroundPaint</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams>g as graphics, row as integer, column as integer</ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Property>
  <ItemName>alternateColor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>alternateColor As Color</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>alternateColor As Color = &amp;cF0F5FF</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>alternateRows</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>alternateRows As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>alternateRows As Boolean = True</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Width</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>100</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Height</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>100</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LockLeft</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LockTop</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LockRight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LockBottom</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TabPanelIndex</ObjName>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TabIndex</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TabStop</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Visible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>HelpTag</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AutoDeactivate</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Enabled</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Border</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ColumnCount</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>1</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ColumnWidths</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>HasHeading</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>UseFocusRing</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>InitialValue</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>HeadingIndex</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>-1</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ScrollbarHorizontal</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ScrollBarVertical</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>GridLinesHorizontal</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <EditorType>Enum</EditorType>
   <InheritsFrom>ListBox</InheritsFrom>
   <Enumeration>
    <ItemDef>0 - Default</ItemDef>
    <ItemDef>1 - None</ItemDef>
    <ItemDef>2 - ThinDotted</ItemDef>
    <ItemDef>3 - ThinSolid</ItemDef>
    <ItemDef>4 - ThickSolid</ItemDef>
    <ItemDef>5 - DoubleThinSolid</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>GridLinesVertical</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <EditorType>Enum</EditorType>
   <InheritsFrom>ListBox</InheritsFrom>
   <Enumeration>
    <ItemDef>0 - Default</ItemDef>
    <ItemDef>1 - None</ItemDef>
    <ItemDef>2 - ThinDotted</ItemDef>
    <ItemDef>3 - ThinSolid</ItemDef>
    <ItemDef>4 - ThickSolid</ItemDef>
    <ItemDef>5 - DoubleThinSolid</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>DefaultRowHeight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>-1</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>_ScrollWidth</ObjName>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>-1</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>_ScrollOffset</ObjName>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TextFont</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Font</PropertyGroup>
   <PropertyValue>System</PropertyValue>
   <ItemType>String</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TextSize</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Font</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Single</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TextUnit</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Font</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>FontUnits</ItemType>
   <EditorType>Enum</EditorType>
   <InheritsFrom>ListBox</InheritsFrom>
   <Enumeration>
    <ItemDef>0 - Default</ItemDef>
    <ItemDef>1 - Pixel</ItemDef>
    <ItemDef>2 - Point</ItemDef>
    <ItemDef>3 - Inch</ItemDef>
    <ItemDef>4 - Millimeter</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Bold</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Font</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Italic</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Font</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Underline</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Font</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Hierarchical</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>EnableDrag</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>EnableDragReorder</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>RequiresSelection</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>SelectionType</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <EditorType>Enum</EditorType>
   <InheritsFrom>ListBox</InheritsFrom>
   <Enumeration>
    <ItemDef>0 - Single</ItemDef>
    <ItemDef>1 - Multiple</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ColumnsResizable</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AutoHideScrollbars</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>DataSource</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Database Binding</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>DataSource</EditorType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>DataField</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Database Binding</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>DataField</EditorType>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>InitialParent</ObjName>
   <InheritsFrom>ListBox</InheritsFrom>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1045599458">
 <ObjName>App</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>Application</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <IsApplicationObject>1</IsApplicationObject>
 <Compatibility></Compatibility>
 <HookInstance>
  <ItemName>Open</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Open()</SourceLine>
   <SourceLine>// function: Open</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// ----- Step #1: Determine Resources Path -----------------------------</SourceLine>
   <SourceLine>// The Resources directory holds all files needed by the application (images,</SourceLine>
   <SourceLine>// databases, etc.).  When the application starts, we store this directory in an</SourceLine>
   <SourceLine>// app property so that it can be accessed from anywhere</SourceLine>
   <SourceLine>// -----------------------------------------------------------------</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Start out by creating a new FolderItem that will</SourceLine>
   <SourceLine>// hold the eventual path to the Resources directory</SourceLine>
   <SourceLine>ResourceDirectory = New FolderItem</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Depending on if we're in debug mode or production mode, set some file locations</SourceLine>
   <SourceLine>// We'll need an installer in this case...</SourceLine>
   <SourceLine>#If DebugBuild Then</SourceLine>
   <SourceLine>If GetFolderItem("").Child("Resources").Exists Then</SourceLine>
   <SourceLine>// OS X Debug</SourceLine>
   <SourceLine>ResourceDirectory = GetFolderItem("").Child("Resources")</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>// Windows Debug</SourceLine>
   <SourceLine>ResourceDirectory = GetFolderItem("").Parent.Child("Resources")</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>#Else</SourceLine>
   <SourceLine>// Production</SourceLine>
   <SourceLine>ResourceDirectory = SpecialFolder.Preferences.Child("aXel").Child("Resources")</SourceLine>
   <SourceLine>#Endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// ----- Step #2: Load Database ---------------------------------------</SourceLine>
   <SourceLine>// We have a property on the App class that will hold our database connection </SourceLine>
   <SourceLine>// and can be accessed from anywhere in the application.  We will only connect </SourceLine>
   <SourceLine>// to the database once and then we will continue to use that same connection </SourceLine>
   <SourceLine>// throughout the entire project.</SourceLine>
   <SourceLine>// -----------------------------------------------------------------</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Create Database Object</SourceLine>
   <SourceLine>MainDB = New REALSQLDatabase</SourceLine>
   <SourceLine>MainDB.DatabaseFile = ResourceDirectory.Child("database.rsd")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Connect to the database</SourceLine>
   <SourceLine>If MainDB.DatabaseFile.Exists = True Then</SourceLine>
   <SourceLine>// The database file already exists, so we want to connect to it.</SourceLine>
   <SourceLine>If MainDB.Connect() = False Then</SourceLine>
   <SourceLine>DisplayDatabaseError( False )// there was an error connecting to the database</SourceLine>
   <SourceLine>Quit</SourceLine>
   <SourceLine>Return</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>// The database file does not exist so we want to create a new one.</SourceLine>
   <SourceLine>// The process of creating a database will establish a connection to it</SourceLine>
   <SourceLine>// so there isn't a need to call Database.Connect after we create it.</SourceLine>
   <SourceLine>// Create the database file</SourceLine>
   <SourceLine>If MainDB.CreateDatabaseFile = False Then</SourceLine>
   <SourceLine>// Error While Creating the Database</SourceLine>
   <SourceLine>MsgBox "Database Error" + EndOfLine + EndOfLine + "There was an error when creating the database."</SourceLine>
   <SourceLine>Quit</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Create the tables for the database</SourceLine>
   <SourceLine>MainDB.SQLExecute "CREATE TABLE " + App.DB_TABLE_XSLT_TEMPLATE + " (title VarChar, description Text, transform VarChar, id Integer NOT NULL PRIMARY KEY)"</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// ----- Step #3: Load XML syntax highlighting --------------------------</SourceLine>
   <SourceLine>// Set up an instance of the HighlightDefinition class that contains info on</SourceLine>
   <SourceLine>// syntactically highlighting XML.  We set it here so that it's available all through</SourceLine>
   <SourceLine>// the app, no matter where we are.</SourceLine>
   <SourceLine>// -----------------------------------------------------------------</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Grab the definition file and create a new HighlightDefinition</SourceLine>
   <SourceLine>//dim languageDefinitionFile as FolderItem = ldf</SourceLine>
   <SourceLine>Dim xmlHighlightDefinition As HighlightDefinition = New HighlightDefinition</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// If the file exists and isn't empty, attempt to load it into the HightlightDefinition;</SourceLine>
   <SourceLine>// if that's successful, store the HighlightDefinition in a global property</SourceLine>
   <SourceLine>if ResourceDirectory.Child("Language Definitions").Child("Xml2.xml") &lt;&gt; nil and ResourceDirectory.Child("Language Definitions").Child("Xml2.xml").Exists Then</SourceLine>
   <SourceLine>if xmlHighlightDefinition.loadFromXml(ResourceDirectory.Child("Language Definitions").Child("Xml2.xml")) Then</SourceLine>
   <SourceLine>Me.XmlHighlightDefinition = xmlHighlightDefinition</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Set the application to AutoQuit, so if all windows are closed then the application</SourceLine>
   <SourceLine>// will quit.</SourceLine>
   <SourceLine>app.autoQuit = True</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>Close</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Close()</SourceLine>
   <SourceLine>// function: Close</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Close the connection to the datbase</SourceLine>
   <SourceLine>MainDB.Close</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <Method>
  <ItemName>DisplayDatabaseError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub DisplayDatabaseError(doRollback As Boolean)</SourceLine>
   <SourceLine>// function: DisplayDatabaseError</SourceLine>
   <SourceLine>// parameters: doRollback As Boolean</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Display a dialog that shows information about the error that</SourceLine>
   <SourceLine>// has occurred from the database engine.  If requested a Rollback</SourceLine>
   <SourceLine>// will also happen on the database in order to undo any changes</SourceLine>
   <SourceLine>// that happened since the last commit.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>MsgBox "There was a database error. " + str(MainDB.ErrorCode) + EndOfLine + EndOfLine + MainDB.ErrorMessage</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if doRollback then</SourceLine>
   <SourceLine>MainDb.rollback</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>doRollback As Boolean</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CreateDatabaseFile</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CreateDatabaseFile()</SourceLine>
   <SourceLine>// function: CreateDatabaseFile</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Creates an in-memory REALSQLDatabase</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Create the database file</SourceLine>
   <SourceLine>If MainDB.CreateDatabaseFile = False Then</SourceLine>
   <SourceLine>// Error While Creating the Database</SourceLine>
   <SourceLine>MsgBox "Database Error" + EndOfLine + EndOfLine + "There was an error when creating the database."</SourceLine>
   <SourceLine>Quit</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Create the tables for the database</SourceLine>
   <SourceLine>MainDB.SQLExecute "CREATE TABLE " + App.DB_TABLE_XSLT_TEMPLATE + " (title VarChar, description Text, transform VarChar, id Integer NOT NULL PRIMARY KEY)"</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>PopulateListbox</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PopulateListbox(lb As Listbox, rs As RecordSet)</SourceLine>
   <SourceLine>// function: PopulateListbox</SourceLine>
   <SourceLine>// parameters: lb As Listbox, rs As RecordSet</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Populate the specified listbox with the data in the recordset</SourceLine>
   <SourceLine>// that is provided.  This will loop through the records in the</SourceLine>
   <SourceLine>// recordset and add rows to the listbox that contain the data</SourceLine>
   <SourceLine>// from the recordset.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim i as integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Clear the order list</SourceLine>
   <SourceLine>lb.deleteAllRows</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Loop until we reach the end of the recordset</SourceLine>
   <SourceLine>while not rs.eof</SourceLine>
   <SourceLine>lb.addRow ""// add a new row to the listbox</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Loop through all of the fields in the recordset and add the data to the correct</SourceLine>
   <SourceLine>// column in the listbox</SourceLine>
   <SourceLine>for i = 1 to rs.fieldCount</SourceLine>
   <SourceLine>// The listbox Cell property is 0-based so we need to subtract 1 from the database field</SourceLine>
   <SourceLine>// number to get the correct correct column number.  This means field 1 is in column 0 of</SourceLine>
   <SourceLine>// the listbox.</SourceLine>
   <SourceLine>lb.cell( lb.lastIndex, i-1 ) = rs.idxField( i ).stringValue</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs.moveNext// move to the next record</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// If the listbox is set to be sorted by a particular column then we want to</SourceLine>
   <SourceLine>// sort the listbox contents after we populate it, so that they appear in the</SourceLine>
   <SourceLine>// correct order.</SourceLine>
   <SourceLine>if lb.sortedColumn &gt; -1 then// the listbox is sorted by a column</SourceLine>
   <SourceLine>lb.sort// sort the listbox data using the current sort settings</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>lb As Listbox, rs As RecordSet</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>DisplayWarningMsg</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub DisplayWarningMsg(msg As String)</SourceLine>
   <SourceLine>// function: DisplayErrorMsg</SourceLine>
   <SourceLine>// parameters: msg As String</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Display a message with a yellow warning icon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim returnValue As Integer = MsgBox(msg, 816)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>msg As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>DisplayErrorMsg</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub DisplayErrorMsg(msg As String)</SourceLine>
   <SourceLine>// function: DisplayErrorMsg</SourceLine>
   <SourceLine>// parameters: msg As String</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Display a message with a red error icon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim returnValue As Integer = MsgBox(msg, 784)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>msg As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>OpenTextFile</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function OpenTextFile(validFileTypes As FileType) As String()</SourceLine>
   <SourceLine>// function: OpenTextFile</SourceLine>
   <SourceLine>// parameters: validFileTypes As FileType</SourceLine>
   <SourceLine>// return: Array(fileName, fileContents)</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Opens a text file and returns its contents</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim file As FolderItem</SourceLine>
   <SourceLine>Dim fileContents As String</SourceLine>
   <SourceLine>Dim inputStream As TextInputStream</SourceLine>
   <SourceLine>Dim ret() As String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>file = GetOpenFolderItem(validFileTypes)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If file &lt;&gt; Nil Then</SourceLine>
   <SourceLine>// Open an input stream to the XML file and read its contents</SourceLine>
   <SourceLine>Try</SourceLine>
   <SourceLine>// Attempt to open the text file and return its text contents</SourceLine>
   <SourceLine>inputStream = file.OpenAsTextFile</SourceLine>
   <SourceLine>fileContents = inputStream.ReadAll</SourceLine>
   <SourceLine>return Array(file.Name, fileContents)</SourceLine>
   <SourceLine>Catch err as NilObjectException</SourceLine>
   <SourceLine>App.DisplayWarningMsg("There was an error while opening the file:" + EndOfLine + EndOfLine + err.Message)</SourceLine>
   <SourceLine>Finally</SourceLine>
   <SourceLine>inputStream.Close</SourceLine>
   <SourceLine>End Try</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>validFileTypes As FileType</ItemParams>
  <ItemResult>String()</ItemResult>
 </Method>
 <Property>
  <ItemName>MainDB</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>MainDB As REALSQLDatabase</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>MainDB As REALSQLDatabase</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>XmlHighlightDefinition</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>XmlHighlightDefinition As HighlightDefinition</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>XmlHighlightDefinition As HighlightDefinition</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>ResourceDirectory</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ResourceDirectory As FolderItem</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ResourceDirectory As FolderItem</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <PropertyVal Name="MenuBar">258881810</PropertyVal>
 <ViewBehavior>
 </ViewBehavior>
 <Constant>
  <ItemName>kFileQuitShortcut</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>kFileQuitShortcut</ItemName>
  <ItemType>0</ItemType>
  <ItemDef></ItemDef>
  <ItemFlags>0</ItemFlags>
  <ConstantInstance>
   <ItemPlatform>1</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>Cmd+Q</ItemDef>
  </ConstantInstance>
  <ConstantInstance>
   <ItemPlatform>5</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>Ctrl+Q</ItemDef>
  </ConstantInstance>
 </Constant>
 <Constant>
  <ItemName>kFileQuit</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>kFileQuit</ItemName>
  <ItemType>0</ItemType>
  <ItemDef>&amp;Quit</ItemDef>
  <ItemFlags>0</ItemFlags>
  <ConstantInstance>
   <ItemPlatform>2</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>E&amp;xit</ItemDef>
  </ConstantInstance>
 </Constant>
 <Constant>
  <ItemName>kEditClear</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>kEditClear</ItemName>
  <ItemType>0</ItemType>
  <ItemDef>&amp;Delete</ItemDef>
  <ItemFlags>0</ItemFlags>
  <ConstantInstance>
   <ItemPlatform>2</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>&amp;Delete</ItemDef>
  </ConstantInstance>
  <ConstantInstance>
   <ItemPlatform>5</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>&amp;Delete</ItemDef>
  </ConstantInstance>
 </Constant>
 <Constant>
  <ItemName>DB_TABLE_XSLT_TEMPLATE</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>DB_TABLE_XSLT_TEMPLATE</ItemName>
  <ItemType>0</ItemType>
  <ItemDef>xslt_template</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
</block>
<block type="BuildAutomation" ID="224728654">
 <ObjName>Build Automation</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="BuildStepsList" ID="1738253158">
 <ObjName>Linux</ObjName>
 <ObjContainerID>224728654</ObjContainerID>
</block>
<block type="BuildProjectStep" ID="453309524">
 <ObjName>Build</ObjName>
 <ObjContainerID>1738253158</ObjContainerID>
</block>
<block type="BuildStepsList" ID="1648690765">
 <ObjName>Mac OS X</ObjName>
 <ObjContainerID>224728654</ObjContainerID>
</block>
<block type="BuildProjectStep" ID="564206920">
 <ObjName>Build</ObjName>
 <ObjContainerID>1648690765</ObjContainerID>
</block>
<block type="BuildStepsList" ID="1485419741">
 <ObjName>Windows</ObjName>
 <ObjContainerID>224728654</ObjContainerID>
</block>
<block type="BuildProjectStep" ID="952207418">
 <ObjName>Build</ObjName>
 <ObjContainerID>1485419741</ObjContainerID>
</block>
<block type="Module" ID="292225366">
 <ObjName>MarsSplitter</ObjName>
 <ObjContainerID>1658580157</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>Canvas</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <HookInstance>
  <ItemName>MouseEnter</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub MouseEnter()</SourceLine>
   <SourceLine>PickCursor</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>MouseDown</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MouseDown(X As Integer, Y As Integer) As Boolean</SourceLine>
   <SourceLine>if me.Enabled and me.Visible then</SourceLine>
   <SourceLine>mXAnchor = X</SourceLine>
   <SourceLine>mYAnchor = Y</SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>Open</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Open()</SourceLine>
   <SourceLine>me.dockingSide = new Dictionary</SourceLine>
   <SourceLine>PickCursor</SourceLine>
   <SourceLine>Open()</SourceLine>
   <SourceLine>Moved(0)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>Paint</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Paint(g As Graphics)</SourceLine>
   <SourceLine>' Draw a little handle at the middle of the splitter region.</SourceLine>
   <SourceLine>Dim x,y As Integer</SourceLine>
   <SourceLine>If Me.Active And Me.Enabled and me.Visible Then</SourceLine>
   <SourceLine>x = Me.Width / 2</SourceLine>
   <SourceLine>y = Me.Height / 2</SourceLine>
   <SourceLine>DrawHandlePoint(g,x,y)</SourceLine>
   <SourceLine>const drawLines = false</SourceLine>
   <SourceLine>const margin = 32</SourceLine>
   <SourceLine>If IsVertical Then</SourceLine>
   <SourceLine>#if drawLines</SourceLine>
   <SourceLine>g.ForeColor = &amp;ce0e0e0</SourceLine>
   <SourceLine>g.DrawLine x, margin, x, y - margin</SourceLine>
   <SourceLine>g.DrawLine x, y + margin, x, me.Height - margin</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>DrawHandlePoint(g,x,y-4)</SourceLine>
   <SourceLine>DrawHandlePoint(g,x,y-8)</SourceLine>
   <SourceLine>DrawHandlePoint(g,x,y+4)</SourceLine>
   <SourceLine>DrawHandlePoint(g,x,y+8)</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>#if drawLines</SourceLine>
   <SourceLine>g.ForeColor = &amp;ce0e0e0</SourceLine>
   <SourceLine>g.DrawLine margin, y, x - margin, y</SourceLine>
   <SourceLine>g.DrawLine x + margin, y, me.Width - margin, y</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>DrawHandlePoint(g,x+4,y)</SourceLine>
   <SourceLine>DrawHandlePoint(g,x+8,y)</SourceLine>
   <SourceLine>DrawHandlePoint(g,x-4,y)</SourceLine>
   <SourceLine>DrawHandlePoint(g,x-8,y)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>MouseDrag</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub MouseDrag(X As Integer, Y As Integer)</SourceLine>
   <SourceLine>If IsVertical Then</SourceLine>
   <SourceLine>drag x - mXAnchor</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>drag y - mYAnchor</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <Method>
  <ItemName>IsVertical</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsVertical() As Boolean</SourceLine>
   <SourceLine>Return Height &gt; Width</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>PickCursor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PickCursor()</SourceLine>
   <SourceLine>if me.Enabled and me.Visible then</SourceLine>
   <SourceLine>If IsVertical Then</SourceLine>
   <SourceLine>Me.MouseCursor = System.Cursors.SplitterEastWest</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Me.MouseCursor = System.Cursors.SplitterNorthSouth</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>Me.MouseCursor = nil</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>VerticalSplit</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub VerticalSplit(distance As Integer)</SourceLine>
   <SourceLine>' Find all the controls to either side of the splitter.</SourceLine>
   <SourceLine>' Adjust their dimensions to match the specified distance.</SourceLine>
   <SourceLine>Dim ctr As Integer</SourceLine>
   <SourceLine>Dim item As Object</SourceLine>
   <SourceLine>Dim okToMove As Boolean</SourceLine>
   <SourceLine>For ctr = 0 To Me.Window.ControlCount-1</SourceLine>
   <SourceLine>item = Me.Window.Control( ctr )</SourceLine>
   <SourceLine>If item IsA RectControl or item IsA ContainerControl Then</SourceLine>
   <SourceLine>' is this within the splitter's area of influence?</SourceLine>
   <SourceLine>okToMove = Not(item Is Me)</SourceLine>
   <SourceLine>if mAttached.Ubound &gt;= 0 then</SourceLine>
   <SourceLine>okToMove = okToMove and mAttached.IndexOf(item) &gt;= 0</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>okToMove = okToMove And item.CtrlTop &gt;= Me.Top</SourceLine>
   <SourceLine>okToMove = okToMove And  (item.CtrlTop + item.CtrlHeight) &lt;= (Me.Top + Me.Height)</SourceLine>
   <SourceLine>okToMove = okToMove And item.CtrlParent = Me.Parent</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If okToMove Then</SourceLine>
   <SourceLine>' is this to the left of the splitter or the right?</SourceLine>
   <SourceLine>dim itemAfterSplitter as Boolean</SourceLine>
   <SourceLine>if dockingSide.HasKey(item) then</SourceLine>
   <SourceLine>itemAfterSplitter = dockingSide.Value(item)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dim pos, c as Integer</SourceLine>
   <SourceLine>pos = me.Left + me.Width \ 2</SourceLine>
   <SourceLine>c = item.CtrlLeft + item.CtrlWidth \ 2</SourceLine>
   <SourceLine>itemAfterSplitter = c &gt;= pos</SourceLine>
   <SourceLine>dockingSide.Value(item) = itemAfterSplitter</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if mCtrlsToMove.IndexOf(item) &lt; 0 then</SourceLine>
   <SourceLine>// resize the control</SourceLine>
   <SourceLine>dim w as Integer</SourceLine>
   <SourceLine>if itemAfterSplitter then</SourceLine>
   <SourceLine>w = item.CtrlWidth - distance</SourceLine>
   <SourceLine>item.CtrlSetLeft item.CtrlLeft + distance</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>w = item.CtrlWidth + distance</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>If item IsA RectControl then</SourceLine>
   <SourceLine>RectControl(item).Resize w, item.CtrlHeight</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>ContainerControl(item).Resize w, item.CtrlHeight</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// move the control</SourceLine>
   <SourceLine>dim ofs as Integer</SourceLine>
   <SourceLine>if itemAfterSplitter then</SourceLine>
   <SourceLine>ofs = distance</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>ofs = -distance</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>If item IsA RectControl then</SourceLine>
   <SourceLine>RectControl(item).Left = RectControl(item).Left + ofs</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>ContainerControl(item).Left = ContainerControl(item).Left + ofs</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine>Me.Left = Me.Left + distance</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>distance As Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>HorizontalSplit</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub HorizontalSplit(distance As Integer)</SourceLine>
   <SourceLine>' Find all the controls to either side of the splitter.</SourceLine>
   <SourceLine>' Adjust their dimensions to match the specified distance.</SourceLine>
   <SourceLine>Dim ctr As Integer</SourceLine>
   <SourceLine>Dim item As Object</SourceLine>
   <SourceLine>Dim okToMove As Boolean</SourceLine>
   <SourceLine>for ctr = 0 To Me.Window.ControlCount-1</SourceLine>
   <SourceLine>item = Me.Window.Control( ctr )</SourceLine>
   <SourceLine>If item IsA RectControl or item IsA ContainerControl Then</SourceLine>
   <SourceLine>' is this within the splitter's area of influence?</SourceLine>
   <SourceLine>okToMove = Not(item Is Me)</SourceLine>
   <SourceLine>if mAttached.Ubound &gt;= 0 then</SourceLine>
   <SourceLine>okToMove = okToMove and mAttached.IndexOf(item) &gt;= 0</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>okToMove = okToMove And item.CtrlLeft &gt;= Me.Left</SourceLine>
   <SourceLine>okToMove = okToMove And (item.CtrlLeft + item.CtrlWidth) &lt;= (Me.Left + Me.Width)</SourceLine>
   <SourceLine>okToMove = okToMove And item.CtrlParent = me.Parent</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If okToMove Then</SourceLine>
   <SourceLine>' is this item above the splitter or below?</SourceLine>
   <SourceLine>dim itemAfterSplitter as Boolean</SourceLine>
   <SourceLine>if dockingSide.HasKey(item) then</SourceLine>
   <SourceLine>itemAfterSplitter = dockingSide.Value(item)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dim pos, c as Integer</SourceLine>
   <SourceLine>pos = me.Top + me.Height \ 2</SourceLine>
   <SourceLine>c = item.CtrlTop + item.CtrlHeight \ 2</SourceLine>
   <SourceLine>itemAfterSplitter = c &gt;= pos</SourceLine>
   <SourceLine>dockingSide.Value(item) = itemAfterSplitter</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if mCtrlsToMove.IndexOf(item) &lt; 0 then</SourceLine>
   <SourceLine>// resize the control</SourceLine>
   <SourceLine>dim h as Integer</SourceLine>
   <SourceLine>if itemAfterSplitter then</SourceLine>
   <SourceLine>h = item.CtrlHeight - distance</SourceLine>
   <SourceLine>item.CtrlSetTop item.CtrlTop + distance</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>h = item.CtrlHeight + distance</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>If item IsA RectControl then</SourceLine>
   <SourceLine>RectControl(item).Resize item.CtrlWidth, h</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>ContainerControl(item).Resize item.CtrlWidth, h</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// move the control</SourceLine>
   <SourceLine>dim ofs as Integer</SourceLine>
   <SourceLine>if itemAfterSplitter then</SourceLine>
   <SourceLine>ofs = distance</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>ofs = -distance</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>If item IsA RectControl then</SourceLine>
   <SourceLine>RectControl(item).Top = RectControl(item).Top + ofs</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>ContainerControl(item).Top = ContainerControl(item).Top + ofs</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine>Me.Top = Me.Top + distance</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>distance As Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>DrawHandlePoint</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub DrawHandlePoint(g As Graphics, x As Integer, y As Integer)</SourceLine>
   <SourceLine>g.Pixel(x,y) = &amp;c333333</SourceLine>
   <SourceLine>g.Pixel(x+1,y+1) = &amp;cFFFFFF</SourceLine>
   <SourceLine>Exception OutOfBoundsException</SourceLine>
   <SourceLine>// ignore</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>g As Graphics, x As Integer, y As Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Reposition</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Reposition(topOrLeft as Integer)</SourceLine>
   <SourceLine>if me.Enabled then</SourceLine>
   <SourceLine>if IsVertical then</SourceLine>
   <SourceLine>drag topOrLeft - me.Left</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>drag topOrLeft - me.Top</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>topOrLeft as Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>drag</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub drag(distance As Integer)</SourceLine>
   <SourceLine>' Find out how many pixels the splitter must move until the mouse</SourceLine>
   <SourceLine>' is once again centered over the origin point.</SourceLine>
   <SourceLine>' Resize all the split-controls by this amount.</SourceLine>
   <SourceLine>' Move the splitter itself so it sits underneath the mouse.</SourceLine>
   <SourceLine>if me.Enabled then</SourceLine>
   <SourceLine>If IsVertical Then</SourceLine>
   <SourceLine>If Me.Left + distance &lt; MinTopLeft Then</SourceLine>
   <SourceLine>distance = MinTopLeft - Me.Left</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>If Me.Left + Me.Width + distance &gt; Me.Window.Width - MinBottomRight Then</SourceLine>
   <SourceLine>distance = Me.Window.Width - MinBottomRight - Me.Left - Me.Width</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>if distance &lt;&gt; 0 then</SourceLine>
   <SourceLine>VerticalSplit distance</SourceLine>
   <SourceLine>Moved(distance)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>If Me.Top + distance &lt; MinTopLeft Then</SourceLine>
   <SourceLine>distance = MinTopLeft - Me.Top</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>If Me.Top + Me.Height + distance &gt; Me.Window.Height - MinBottomRight Then</SourceLine>
   <SourceLine>distance = Me.Window.Height - MinBottomRight - Me.Top - Me.Height</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>if distance &lt;&gt; 0 then</SourceLine>
   <SourceLine>HorizontalSplit distance</SourceLine>
   <SourceLine>Moved(distance)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>distance As Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ResetDocks</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ResetDocks()</SourceLine>
   <SourceLine>me.dockingSide.Clear</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Attach</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Attach(ctrl as RectControl, moveOnly as Boolean = false)</SourceLine>
   <SourceLine>mAttached.Append ctrl</SourceLine>
   <SourceLine>if moveOnly then</SourceLine>
   <SourceLine>mCtrlsToMove.Append ctrl</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>ctrl as RectControl, moveOnly as Boolean = false</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Attach</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Attach(ctrl as ContainerControl, moveOnly as Boolean = false)</SourceLine>
   <SourceLine>mAttached.Append ctrl._Control // this undocumented "_Control" access is necessary to make it work (as of RB 2008r1)</SourceLine>
   <SourceLine>if moveOnly then</SourceLine>
   <SourceLine>mCtrlsToMove.Append ctrl</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>ctrl as ContainerControl, moveOnly as Boolean = false</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Position</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Position() As Integer</SourceLine>
   <SourceLine>if IsVertical then</SourceLine>
   <SourceLine>return me.Left</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>return me.Top</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Hook>
  <ItemName>Open</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>Moved</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams>distance as Integer</ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Note>
  <ItemName>About</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>About</NoteLine>
   <NoteLine>Original version by Mars Saxman: http://www.redplanetsw.com/realbasic/#splitter</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Changes by Thomas Tempelmann on 24 Nov 05:</NoteLine>
   <NoteLine>- added some checks to HorizontalSplit and VerticalSplit so that it does only affect directly neighboring controls</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Changes by Thomas Tempelmann on 20 Jan 08:</NoteLine>
   <NoteLine>- added Reposition() to move the splitter, e.g. within an Resizing event</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Changes by Thomas Tempelmann on 20 Feb 08:</NoteLine>
   <NoteLine>- added .Visible checks so that an enabled by invisible splitter still works but does not reveal itself in the GUI</NoteLine>
   <NoteLine>- deals better with negative heights caused by overflowing the splitter over a control.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Changes by Thomas Tempelmann on 10 Mar 08:</NoteLine>
   <NoteLine>- added Attach() to explicitly attach controls that are moved by the splitter</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Changes by Thomas Tempelmann on 12 Mar 08:</NoteLine>
   <NoteLine>- can now move ContainerControls as well (they're not subclasses of RectControl, sadly)</NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Note>
  <ItemName>Features</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>Features</NoteLine>
   <NoteLine>By default, this splitter moves &amp; resizes all items it finds next to itself,</NoteLine>
   <NoteLine>including ContainerControls</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>You can override this by calling the Attach method to tell the splitter</NoteLine>
   <NoteLine>not only which items are to be considered but also whether these items</NoteLine>
   <NoteLine>shall be resized or not.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>The splitter also pays attention to Locks, so make sure you check those</NoteLine>
   <NoteLine>if things don't seem to work as you expect.</NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Property>
  <ItemName>MinTopLeft</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>MinTopLeft As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>MinTopLeft As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>MinBottomRight</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>MinBottomRight As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>MinBottomRight As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>mXAnchor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mXAnchor As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mXAnchor As Integer</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>mYAnchor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mYAnchor As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mYAnchor As Integer</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>dockingSide</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>dockingSide As Dictionary</SourceLine>
   <SourceLine>key: control</SourceLine>
   <SourceLine>value: boolean (true: top/left, false: bottom/right)</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>dockingSide As Dictionary</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>mAttached()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mAttached() As Object</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mAttached() As Object</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>mCtrlsToMove()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mCtrlsToMove() As Object</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mCtrlsToMove() As Object</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>DoubleBuffer</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TabStop</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Width</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>100</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Height</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>100</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LockLeft</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LockTop</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LockRight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LockBottom</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TabPanelIndex</ObjName>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TabIndex</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Visible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>HelpTag</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AutoDeactivate</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Enabled</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>UseFocusRing</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Backdrop</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>Picture</ItemType>
   <EditorType>Picture</EditorType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AcceptFocus</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AcceptTabs</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>EraseBackground</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>InitialParent</ObjName>
   <InheritsFrom>Canvas</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinTopLeft</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinBottomRight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1257559616">
 <ObjName>TTsUITools</ObjName>
 <ObjContainerID>1658580157</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>CtrlBottom</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CtrlBottom(extends ctrl as Object) As Integer</SourceLine>
   <SourceLine>return ctrl.CtrlTop + ctrl.CtrlHeight</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>extends ctrl as Object</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>Resize</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Resize(extends container as ContainerControl, width as Integer, height as Integer)</SourceLine>
   <SourceLine>dim dW, dH as Integer</SourceLine>
   <SourceLine>dW = width - container.Width</SourceLine>
   <SourceLine>dH = height - container.Height</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if container isA PagePanel then</SourceLine>
   <SourceLine>// resizes the children automatically</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>for i as Integer = 0 to container.Window.ControlCount-1</SourceLine>
   <SourceLine>dim ctrl0 as Control = container.Window.Control(i)</SourceLine>
   <SourceLine>dim s as String = ctrl0.Name</SourceLine>
   <SourceLine>if ctrl0 isA RectControl then</SourceLine>
   <SourceLine>dim ctrl as RectControl = RectControl(ctrl0)</SourceLine>
   <SourceLine>if ctrl.Parent = container then</SourceLine>
   <SourceLine>dim dW2, dH2, newT, newL as Integer</SourceLine>
   <SourceLine>newT = ctrl.Top</SourceLine>
   <SourceLine>newL = ctrl.Left</SourceLine>
   <SourceLine>if ctrl.LockRight then</SourceLine>
   <SourceLine>if ctrl.LockLeft then</SourceLine>
   <SourceLine>dW2 = dW</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>newL = ctrl.Left + dW</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if ctrl.LockBottom then</SourceLine>
   <SourceLine>if ctrl.LockTop then</SourceLine>
   <SourceLine>dH2 = dH</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>newT = ctrl.Top + dH</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if dW2 &lt;&gt; 0 or dH2 &lt;&gt; 0 then</SourceLine>
   <SourceLine>ctrl.Resize ctrl.Width + dW2, ctrl.Height + dH2</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>ctrl.Top = newT</SourceLine>
   <SourceLine>ctrl.Left = newL</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>container.Width = width</SourceLine>
   <SourceLine>container.Height = height</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>extends container as ContainerControl, width as Integer, height as Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CtrlLeft</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CtrlLeft(extends ctrl as Object) As Integer</SourceLine>
   <SourceLine>if ctrl isA RectControl then</SourceLine>
   <SourceLine>return RectControl(ctrl).Left</SourceLine>
   <SourceLine>elseif ctrl isA Window then</SourceLine>
   <SourceLine>return Window(ctrl).Left</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>extends ctrl as Object</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>CtrlWidth</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CtrlWidth(extends ctrl as Object) As Integer</SourceLine>
   <SourceLine>if ctrl isA RectControl then</SourceLine>
   <SourceLine>return RectControl(ctrl).Width</SourceLine>
   <SourceLine>elseif ctrl isA Window then</SourceLine>
   <SourceLine>return Window(ctrl).Width</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>extends ctrl as Object</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>CtrlHeight</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CtrlHeight(extends ctrl as Object) As Integer</SourceLine>
   <SourceLine>if ctrl isA RectControl then</SourceLine>
   <SourceLine>return RectControl(ctrl).Height</SourceLine>
   <SourceLine>elseif ctrl isA Window then</SourceLine>
   <SourceLine>return Window(ctrl).Height</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>extends ctrl as Object</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>CtrlTop</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CtrlTop(extends ctrl as Object) As Integer</SourceLine>
   <SourceLine>if ctrl isA RectControl then</SourceLine>
   <SourceLine>return RectControl(ctrl).Top</SourceLine>
   <SourceLine>elseif ctrl isA Window then</SourceLine>
   <SourceLine>return Window(ctrl).Top</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>extends ctrl as Object</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>CtrlRight</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CtrlRight(extends ctrl as Object) As Integer</SourceLine>
   <SourceLine>return ctrl.CtrlLeft + ctrl.CtrlWidth</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>extends ctrl as Object</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>Resize</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Resize(extends container as RectControl, width as Integer, height as Integer)</SourceLine>
   <SourceLine>dim dW, dH as Integer</SourceLine>
   <SourceLine>dW = width - container.Width</SourceLine>
   <SourceLine>dH = height - container.Height</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if container isA PagePanel then</SourceLine>
   <SourceLine>// resizes the children automatically</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>for i as Integer = 0 to container.Window.ControlCount-1</SourceLine>
   <SourceLine>dim ctrl0 as Control = container.Window.Control(i)</SourceLine>
   <SourceLine>dim s as String = ctrl0.Name</SourceLine>
   <SourceLine>if ctrl0 isA RectControl then</SourceLine>
   <SourceLine>dim ctrl as RectControl = RectControl(ctrl0)</SourceLine>
   <SourceLine>if ctrl.Parent = container then</SourceLine>
   <SourceLine>dim dW2, dH2, newT, newL as Integer</SourceLine>
   <SourceLine>newT = ctrl.Top</SourceLine>
   <SourceLine>newL = ctrl.Left</SourceLine>
   <SourceLine>if ctrl.LockRight then</SourceLine>
   <SourceLine>if ctrl.LockLeft then</SourceLine>
   <SourceLine>dW2 = dW</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>newL = ctrl.Left + dW</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if ctrl.LockBottom then</SourceLine>
   <SourceLine>if ctrl.LockTop then</SourceLine>
   <SourceLine>dH2 = dH</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>newT = ctrl.Top + dH</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if dW2 &lt;&gt; 0 or dH2 &lt;&gt; 0 then</SourceLine>
   <SourceLine>ctrl.Resize ctrl.Width + dW2, ctrl.Height + dH2</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>ctrl.Top = newT</SourceLine>
   <SourceLine>ctrl.Left = newL</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>container.Width = width</SourceLine>
   <SourceLine>container.Height = height</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>extends container as RectControl, width as Integer, height as Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CtrlParent</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CtrlParent(extends ctrl as Object) As Object</SourceLine>
   <SourceLine>if ctrl isA RectControl then</SourceLine>
   <SourceLine>return RectControl(ctrl).Parent</SourceLine>
   <SourceLine>elseif ctrl isA ContainerControl then</SourceLine>
   <SourceLine>return ContainerControl(ctrl).Parent</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>extends ctrl as Object</ItemParams>
  <ItemResult>Object</ItemResult>
 </Method>
 <Method>
  <ItemName>CtrlSetLeft</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CtrlSetLeft(extends ctrl as Object, v as Integer)</SourceLine>
   <SourceLine>if ctrl isA RectControl then</SourceLine>
   <SourceLine>RectControl(ctrl).Left = v</SourceLine>
   <SourceLine>elseif ctrl isA Window then</SourceLine>
   <SourceLine>Window(ctrl).Left = v</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>extends ctrl as Object, v as Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CtrlSetTop</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CtrlSetTop(extends ctrl as Object, v as Integer)</SourceLine>
   <SourceLine>if ctrl isA RectControl then</SourceLine>
   <SourceLine>RectControl(ctrl).Top = v</SourceLine>
   <SourceLine>elseif ctrl isA Window then</SourceLine>
   <SourceLine>Window(ctrl).Top = v</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>extends ctrl as Object, v as Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>HasFocus</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function HasFocus(c as ContainerControl) As Boolean</SourceLine>
   <SourceLine>// finds out if any of the directly owned controls has the focus</SourceLine>
   <SourceLine>// unfortunately, I can't make it search embedded containers as well - those have to be checked explicitly</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for idx as Integer = 0 to c.ControlCount-1</SourceLine>
   <SourceLine>dim ctrl as Object = c.Control(idx)</SourceLine>
   <SourceLine>if c.Focus = ctrl then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>c as ContainerControl</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>CtrlLockTop</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CtrlLockTop(extends ctrl as Object) As Boolean</SourceLine>
   <SourceLine>if ctrl isA RectControl then</SourceLine>
   <SourceLine>return RectControl(ctrl).LockTop</SourceLine>
   <SourceLine>elseif ctrl isA ContainerControl then</SourceLine>
   <SourceLine>return ContainerControl(ctrl).LockTop</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>extends ctrl as Object</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>CtrlLockBottom</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CtrlLockBottom(extends ctrl as Object) As Boolean</SourceLine>
   <SourceLine>if ctrl isA RectControl then</SourceLine>
   <SourceLine>return RectControl(ctrl).LockBottom</SourceLine>
   <SourceLine>elseif ctrl isA ContainerControl then</SourceLine>
   <SourceLine>return ContainerControl(ctrl).LockBottom</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>extends ctrl as Object</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>ShowMessageDialog</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ShowMessageDialog(w as Window, icon as String, actionTxt as String, cancelTxt as String, altTxt as String, msg as String, explanation as String) As Integer</SourceLine>
   <SourceLine>System.DebugLog "UITools.ShowMessageDialog "+msg+" -- "+explanation</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim d as new MessageDialog</SourceLine>
   <SourceLine>dim b as MessageDialogButton</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if icon = "ask" then</SourceLine>
   <SourceLine>d.Icon = MessageDialog.GraphicQuestion</SourceLine>
   <SourceLine>elseif icon = "note" then</SourceLine>
   <SourceLine>d.Icon = MessageDialog.GraphicNote</SourceLine>
   <SourceLine>elseif icon = "stop" then</SourceLine>
   <SourceLine>d.Icon = MessageDialog.GraphicStop</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Len(actionTxt) &gt; 1 then</SourceLine>
   <SourceLine>d.ActionButton.Caption = actionTxt</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>d.CancelButton.Visible = cancelTxt &lt;&gt; ""</SourceLine>
   <SourceLine>if Len(cancelTxt) &gt; 1 then</SourceLine>
   <SourceLine>d.CancelButton.Caption = cancelTxt</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>d.AlternateActionButton.Visible = altTxt &lt;&gt; ""</SourceLine>
   <SourceLine>if Len(altTxt) &gt; 1 then</SourceLine>
   <SourceLine>d.AlternateActionButton.Caption = altTxt</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>d.Message = msg</SourceLine>
   <SourceLine>d.Explanation = explanation</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if w &lt;&gt; nil then</SourceLine>
   <SourceLine>w.Show // bring parent to front</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if TargetMacOS and w &lt;&gt; nil then</SourceLine>
   <SourceLine>b = d.ShowModalWithin (w)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>b = d.ShowModal () // Windows has problems with the Within() function when the win is not frontmost</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select case b</SourceLine>
   <SourceLine>case d.ActionButton</SourceLine>
   <SourceLine>return 1</SourceLine>
   <SourceLine>case d.CancelButton</SourceLine>
   <SourceLine>return 2</SourceLine>
   <SourceLine>case d.AlternateActionButton</SourceLine>
   <SourceLine>return 3</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>w as Window, icon as String, actionTxt as String, cancelTxt as String, altTxt as String, msg as String, explanation as String</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>ShowMsg</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ShowMsg(w as Window, msg as String, more as String = "")</SourceLine>
   <SourceLine>call ShowMessageDialog (w, "note", "*", "", "", msg, more)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>w as Window, msg as String, more as String = ""</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>StringWidth</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function StringWidth(txt as String, fontName as String, fontSize as Integer) As Double</SourceLine>
   <SourceLine>dim p as Picture</SourceLine>
   <SourceLine>p = NewPicture (32, 32, 32)</SourceLine>
   <SourceLine>if fontName &lt;&gt; "" then p.Graphics.TextFont = fontName</SourceLine>
   <SourceLine>if fontSize &gt; 0 then p.Graphics.TextSize = fontSize</SourceLine>
   <SourceLine>return p.Graphics.StringWidth (txt)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>txt as String, fontName as String, fontSize as Integer</ItemParams>
  <ItemResult>Double</ItemResult>
 </Method>
 <Method>
  <ItemName>EnsureSheetIsResizable</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub EnsureSheetIsResizable(extends w as Window)</SourceLine>
   <SourceLine>#if TargetMacOS</SourceLine>
   <SourceLine>soft declare function ChangeWindowAttributes lib "Carbon" (window as WindowPtr, setTheseAttributes as Uint32, clearTheseAttributes as Uint32) as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>const kWindowResizableAttribute = &amp;h10 // (1L &lt;&lt; 4)</SourceLine>
   <SourceLine>const kWindowLiveResizeAttribute = &amp;h10000000 // (1L &lt;&lt; 28),</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if System.IsFunctionAvailable("ChangeWindowAttributes", "Carbon") then</SourceLine>
   <SourceLine>dim attrs as Uint32</SourceLine>
   <SourceLine>if w.Resizeable then attrs = attrs + kWindowResizableAttribute</SourceLine>
   <SourceLine>if w.LiveResize then attrs = attrs + kWindowLiveResizeAttribute</SourceLine>
   <SourceLine>if attrs &lt;&gt; 0 then</SourceLine>
   <SourceLine>dim result as integer = ChangeWindowAttributes(w, attrs, 0)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>extends w as Window</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Note>
  <ItemName>About</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>About</NoteLine>
   <NoteLine>Written mostly by Thomas Tempelmann, for the public domain</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>2147483648</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Folder" ID="1418977445">
 <ObjName>Containers</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="Window" ID="436737850">
 <ObjName>Container_TextAreaAndLabel</ObjName>
 <ObjContainerID>1418977445</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>ContainerControl</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <PropertyVal Name="EraseBackground">True</PropertyVal>
 <PropertyVal Name="AcceptTabs">True</PropertyVal>
 <PropertyVal Name="AcceptFocus"></PropertyVal>
 <PropertyVal Name="Backdrop"></PropertyVal>
 <PropertyVal Name="BackColor">16777215</PropertyVal>
 <PropertyVal Name="HasBackColor">False</PropertyVal>
 <PropertyVal Name="UseFocusRing"></PropertyVal>
 <PropertyVal Name="HelpTag"></PropertyVal>
 <PropertyVal Name="AutoDeactivate">True</PropertyVal>
 <PropertyVal Name="Enabled">True</PropertyVal>
 <PropertyVal Name="Visible">True</PropertyVal>
 <PropertyVal Name="TabStop">True</PropertyVal>
 <PropertyVal Name="TabIndex">0</PropertyVal>
 <PropertyVal Name="TabPanelIndex">0</PropertyVal>
 <PropertyVal Name="LockBottom"></PropertyVal>
 <PropertyVal Name="LockRight"></PropertyVal>
 <PropertyVal Name="LockTop"></PropertyVal>
 <PropertyVal Name="LockLeft"></PropertyVal>
 <PropertyVal Name="Height">389</PropertyVal>
 <PropertyVal Name="Width">435</PropertyVal>
 <PropertyVal Name="Top">0</PropertyVal>
 <PropertyVal Name="Left">0</PropertyVal>
 <PropertyVal Name="InitialParent"></PropertyVal>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>InitialParent</ObjName>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>String</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Width</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>300</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Height</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>300</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LockLeft</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LockTop</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LockRight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LockBottom</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TabPanelIndex</ObjName>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TabIndex</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TabStop</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Visible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Enabled</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AutoDeactivate</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>HelpTag</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>String</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>UseFocusRing</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>HasBackColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>BackColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>&amp;hFFFFFF</PropertyValue>
   <ItemType>Color</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Backdrop</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>Picture</ItemType>
   <EditorType>Picture</EditorType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AcceptFocus</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AcceptTabs</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>EraseBackground</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
 </ViewBehavior>
 <ControlBehavior>
  <Superclass>SyntaxHighlightEditField</Superclass>
  <HookInstance>
   <ItemName>TextChange</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub TextChange()</SourceLine>
    <SourceLine>// function: textChange</SourceLine>
    <SourceLine>// parameters: none</SourceLine>
    <SourceLine>// return: none</SourceLine>
    <SourceLine>//</SourceLine>
    <SourceLine>// As the text in these inputs changes, monitor the text so</SourceLine>
    <SourceLine>// that certain functions get enabled/disabled</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>Window_Main.EnableFunctions()</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>Label</Superclass>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>Label</Superclass>
 </ControlBehavior>
 <Control>
  <ControlClass>SyntaxHighlightEditField</ControlClass>
  <ItemName>SyntaxHighlightEditField</ItemName>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="Alignment">0</PropertyVal>
  <PropertyVal Name="AcceptTabs">True</PropertyVal>
  <PropertyVal Name="LimitText">0</PropertyVal>
  <PropertyVal Name="ReadOnly"></PropertyVal>
  <PropertyVal Name="Mask"></PropertyVal>
  <PropertyVal Name="Text"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Bold"></PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextFont">Courier</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Format"></PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="BackColor">16777215</PropertyVal>
  <PropertyVal Name="TextColor">0</PropertyVal>
  <PropertyVal Name="UseFocusRing">False</PropertyVal>
  <PropertyVal Name="Styled">True</PropertyVal>
  <PropertyVal Name="ScrollbarVertical">True</PropertyVal>
  <PropertyVal Name="ScrollbarHorizontal">True</PropertyVal>
  <PropertyVal Name="Multiline">True</PropertyVal>
  <PropertyVal Name="Border">True</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex">0</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="LockBottom">True</PropertyVal>
  <PropertyVal Name="LockRight">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">369</PropertyVal>
  <PropertyVal Name="Width">435</PropertyVal>
  <PropertyVal Name="Top">20</PropertyVal>
  <PropertyVal Name="Left">0</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Super">SyntaxHighlightEditField</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">TextArea_Input</PropertyVal>
  <PropertyVal Name="AutomaticallyCheckSpelling">True</PropertyVal>
  <PropertyVal Name="HideSelection">True</PropertyVal>
  <ControlIndex>0</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>Label</ControlClass>
  <ItemName>Label</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Transparent">False</PropertyVal>
  <PropertyVal Name="Selectable">False</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Multiline"></PropertyVal>
  <PropertyVal Name="TextColor">0</PropertyVal>
  <PropertyVal Name="TextAlign">0</PropertyVal>
  <PropertyVal Name="Text"></PropertyVal>
  <PropertyVal Name="TabIndex">1</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="LockBottom"></PropertyVal>
  <PropertyVal Name="LockRight"></PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">20</PropertyVal>
  <PropertyVal Name="Width">356</PropertyVal>
  <PropertyVal Name="Top">0</PropertyVal>
  <PropertyVal Name="Left">81</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Super">Label</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">Label_Value</PropertyVal>
  <ControlIndex>1</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>Label</ControlClass>
  <ItemName>Label</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Bold">True</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Transparent">False</PropertyVal>
  <PropertyVal Name="Selectable">False</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Multiline"></PropertyVal>
  <PropertyVal Name="TextColor">0</PropertyVal>
  <PropertyVal Name="TextAlign">0</PropertyVal>
  <PropertyVal Name="Text"></PropertyVal>
  <PropertyVal Name="TabIndex">2</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="LockBottom"></PropertyVal>
  <PropertyVal Name="LockRight"></PropertyVal>
  <PropertyVal Name="LockTop">False</PropertyVal>
  <PropertyVal Name="LockLeft">False</PropertyVal>
  <PropertyVal Name="Height">20</PropertyVal>
  <PropertyVal Name="Width">86</PropertyVal>
  <PropertyVal Name="Top">0</PropertyVal>
  <PropertyVal Name="Left">0</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Super">Label</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">Label_Label</PropertyVal>
  <ControlIndex>2</ControlIndex>
  <Locked>0</Locked>
 </Control>
</block>
<block type="Window" ID="1240101391">
 <ObjName>Container_XmlXslInput</ObjName>
 <ObjContainerID>1418977445</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>ContainerControl</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <PropertyVal Name="EraseBackground">True</PropertyVal>
 <PropertyVal Name="AcceptTabs">True</PropertyVal>
 <PropertyVal Name="AcceptFocus"></PropertyVal>
 <PropertyVal Name="Backdrop"></PropertyVal>
 <PropertyVal Name="BackColor">16777215</PropertyVal>
 <PropertyVal Name="HasBackColor">False</PropertyVal>
 <PropertyVal Name="UseFocusRing"></PropertyVal>
 <PropertyVal Name="HelpTag"></PropertyVal>
 <PropertyVal Name="AutoDeactivate">True</PropertyVal>
 <PropertyVal Name="Enabled">True</PropertyVal>
 <PropertyVal Name="Visible">True</PropertyVal>
 <PropertyVal Name="TabStop">True</PropertyVal>
 <PropertyVal Name="TabIndex">0</PropertyVal>
 <PropertyVal Name="TabPanelIndex">0</PropertyVal>
 <PropertyVal Name="LockBottom">True</PropertyVal>
 <PropertyVal Name="LockRight">True</PropertyVal>
 <PropertyVal Name="LockTop">True</PropertyVal>
 <PropertyVal Name="LockLeft">True</PropertyVal>
 <PropertyVal Name="Height">632</PropertyVal>
 <PropertyVal Name="Width">882</PropertyVal>
 <PropertyVal Name="Top">0</PropertyVal>
 <PropertyVal Name="Left">0</PropertyVal>
 <PropertyVal Name="InitialParent"></PropertyVal>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>InitialParent</ObjName>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>String</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Width</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>300</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Height</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>300</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LockLeft</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LockTop</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LockRight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LockBottom</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TabPanelIndex</ObjName>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TabIndex</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TabStop</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Visible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Enabled</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AutoDeactivate</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>HelpTag</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>String</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>UseFocusRing</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>HasBackColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>BackColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>&amp;hFFFFFF</PropertyValue>
   <ItemType>Color</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Backdrop</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>Picture</ItemType>
   <EditorType>Picture</EditorType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AcceptFocus</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AcceptTabs</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>EraseBackground</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>ContainerControl</InheritsFrom>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>XML_INPUT_LABEL</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>XML_INPUT_LABEL</ItemName>
  <ItemType>0</ItemType>
  <ItemDef>Source XML:</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>XSL_INPUT_LABEL</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>XSL_INPUT_LABEL</ItemName>
  <ItemType>0</ItemType>
  <ItemDef>Source XSL:</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
 <ControlBehavior>
  <Superclass>SyntaxHighlightEditField</Superclass>
  <HookInstance>
   <ItemName>TextChange</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub TextChange()</SourceLine>
    <SourceLine>// function: textChange</SourceLine>
    <SourceLine>// parameters: none</SourceLine>
    <SourceLine>// return: none</SourceLine>
    <SourceLine>//</SourceLine>
    <SourceLine>// As the text in these inputs changes, monitor the text so</SourceLine>
    <SourceLine>// that certain functions get enabled/disabled</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>Window_Main.EnableFunctions()</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>MarsSplitter</Superclass>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>MarsSplitter</Superclass>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>Container_TextAreaAndLabel</Superclass>
  <HookInstance>
   <ItemName>Open</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Open()</SourceLine>
    <SourceLine>// function Open</SourceLine>
    <SourceLine>// parameters: none</SourceLine>
    <SourceLine>// return: none</SourceLine>
    <SourceLine>//</SourceLine>
    <SourceLine>// Set initial label text</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>Me.Label_Label.Text = XML_INPUT_LABEL</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>Container_TextAreaAndLabel</Superclass>
  <HookInstance>
   <ItemName>Open</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Open()</SourceLine>
    <SourceLine>// function Open</SourceLine>
    <SourceLine>// parameters: none</SourceLine>
    <SourceLine>// return: none</SourceLine>
    <SourceLine>//</SourceLine>
    <SourceLine>// Set initial label text</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>Me.Label_Label.Text = XSL_INPUT_LABEL</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <Control>
  <ControlClass>SyntaxHighlightEditField</ControlClass>
  <ItemName>SyntaxHighlightEditField</ItemName>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="Alignment">0</PropertyVal>
  <PropertyVal Name="AcceptTabs"></PropertyVal>
  <PropertyVal Name="LimitText">0</PropertyVal>
  <PropertyVal Name="ReadOnly">True</PropertyVal>
  <PropertyVal Name="Mask"></PropertyVal>
  <PropertyVal Name="Text"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Bold"></PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextFont">Courier</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Format"></PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="BackColor">16777215</PropertyVal>
  <PropertyVal Name="TextColor">0</PropertyVal>
  <PropertyVal Name="UseFocusRing">False</PropertyVal>
  <PropertyVal Name="Styled">True</PropertyVal>
  <PropertyVal Name="ScrollbarVertical">True</PropertyVal>
  <PropertyVal Name="ScrollbarHorizontal">True</PropertyVal>
  <PropertyVal Name="Multiline">True</PropertyVal>
  <PropertyVal Name="Border">True</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex">0</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="LockBottom">True</PropertyVal>
  <PropertyVal Name="LockRight">True</PropertyVal>
  <PropertyVal Name="LockTop">False</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">231</PropertyVal>
  <PropertyVal Name="Width">882</PropertyVal>
  <PropertyVal Name="Top">401</PropertyVal>
  <PropertyVal Name="Left">0</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Super">SyntaxHighlightEditField</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">TextArea_Output</PropertyVal>
  <PropertyVal Name="AutomaticallyCheckSpelling">True</PropertyVal>
  <PropertyVal Name="HideSelection">True</PropertyVal>
  <ControlIndex>0</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>MarsSplitter</ControlClass>
  <ItemName>MarsSplitter</ItemName>
  <PropertyVal Name="MinBottomRight">0</PropertyVal>
  <PropertyVal Name="MinTopLeft">0</PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="EraseBackground">True</PropertyVal>
  <PropertyVal Name="AcceptTabs"></PropertyVal>
  <PropertyVal Name="AcceptFocus"></PropertyVal>
  <PropertyVal Name="Backdrop"></PropertyVal>
  <PropertyVal Name="UseFocusRing">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="TabIndex">1</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="LockBottom">True</PropertyVal>
  <PropertyVal Name="LockRight">True</PropertyVal>
  <PropertyVal Name="LockTop">False</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">12</PropertyVal>
  <PropertyVal Name="Width">882</PropertyVal>
  <PropertyVal Name="Top">389</PropertyVal>
  <PropertyVal Name="Left">0</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Super">MarsSplitter</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">MarsSplitter1</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="DoubleBuffer">False</PropertyVal>
  <ControlIndex>1</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>MarsSplitter</ControlClass>
  <ItemName>MarsSplitter</ItemName>
  <PropertyVal Name="MinBottomRight">0</PropertyVal>
  <PropertyVal Name="MinTopLeft">0</PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="EraseBackground">True</PropertyVal>
  <PropertyVal Name="AcceptTabs"></PropertyVal>
  <PropertyVal Name="AcceptFocus"></PropertyVal>
  <PropertyVal Name="Backdrop"></PropertyVal>
  <PropertyVal Name="UseFocusRing">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="TabIndex">3</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="LockBottom">True</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">False</PropertyVal>
  <PropertyVal Name="Height">389</PropertyVal>
  <PropertyVal Name="Width">12</PropertyVal>
  <PropertyVal Name="Top">0</PropertyVal>
  <PropertyVal Name="Left">435</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Super">MarsSplitter</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">XmlXslSplitter</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="DoubleBuffer">False</PropertyVal>
  <ControlIndex>2</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>Container_TextAreaAndLabel</ControlClass>
  <ItemName>Container_TextAreaAndLabel</ItemName>
  <PropertyVal Name="EraseBackground">True</PropertyVal>
  <PropertyVal Name="AcceptTabs">True</PropertyVal>
  <PropertyVal Name="AcceptFocus"></PropertyVal>
  <PropertyVal Name="Backdrop"></PropertyVal>
  <PropertyVal Name="BackColor">16777215</PropertyVal>
  <PropertyVal Name="HasBackColor">False</PropertyVal>
  <PropertyVal Name="UseFocusRing"></PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex">4</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="LockBottom">True</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">389</PropertyVal>
  <PropertyVal Name="Width">435</PropertyVal>
  <PropertyVal Name="Top">0</PropertyVal>
  <PropertyVal Name="Left">0</PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Super">Container_TextAreaAndLabel</PropertyVal>
  <PropertyVal Name="Name">Container_XmlInput</PropertyVal>
  <ControlIndex>3</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>Container_TextAreaAndLabel</ControlClass>
  <ItemName>Container_TextAreaAndLabel</ItemName>
  <PropertyVal Name="EraseBackground">True</PropertyVal>
  <PropertyVal Name="AcceptTabs">True</PropertyVal>
  <PropertyVal Name="AcceptFocus"></PropertyVal>
  <PropertyVal Name="Backdrop"></PropertyVal>
  <PropertyVal Name="BackColor">16777215</PropertyVal>
  <PropertyVal Name="HasBackColor">False</PropertyVal>
  <PropertyVal Name="UseFocusRing"></PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex">5</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="LockBottom">True</PropertyVal>
  <PropertyVal Name="LockRight">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">389</PropertyVal>
  <PropertyVal Name="Width">435</PropertyVal>
  <PropertyVal Name="Top">0</PropertyVal>
  <PropertyVal Name="Left">447</PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Super">Container_TextAreaAndLabel</PropertyVal>
  <PropertyVal Name="Name">Container_XslInput</PropertyVal>
  <ControlIndex>4</ControlIndex>
  <Locked>0</Locked>
 </Control>
</block>
<block type="Folder" ID="584792787">
 <ObjName>Menus</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="Menu" ID="258881810">
 <ObjName>Menu_MainMenu</ObjName>
 <ObjContainerID>584792787</ObjContainerID>
 <MenuItem>
  <ItemSpecialMenu>0</ItemSpecialMenu>
  <ItemName>FileMenu</ItemName>
  <ItemText>&amp;File</ItemText>
  <ItemIndex>-2147483648</ItemIndex>
  <ItemShortcut></ItemShortcut>
  <MenuAutoEnable>1</MenuAutoEnable>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>0</ItemFlags>
  <Superclass>MenuItem</Superclass>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>FileOpenXML</ItemName>
   <ItemText>Open XML...</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>FileOpenXSLT</ItemName>
   <ItemText>Open XSLT...</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>UntitledSeparator</ItemName>
   <ItemText>-</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>FileSaveXML</ItemName>
   <ItemText>Save XML...</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>0</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>FileSaveXSLT</ItemName>
   <ItemText>Save XSLT...</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>0</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>FileSaveOutput</ItemName>
   <ItemText>Save Output...</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>0</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>UntitledSeparator0</ItemName>
   <ItemText>-</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>FileTransform</ItemName>
   <ItemText>Transform</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut>F9</ItemShortcut>
   <MenuShortcut>F9</MenuShortcut>
   <MenuAutoEnable>0</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>UntitledSeparator1</ItemName>
   <ItemText>-</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>FileQuit</ItemName>
   <ItemText>#App.kFileQuit</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut>#App.kFileQuitShortcut</ItemShortcut>
   <MenuShortcut>#App.kFileQuitShortcut</MenuShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>QuitMenuItem</Superclass>
  </MenuItem>
 </MenuItem>
 <MenuItem>
  <ItemSpecialMenu>0</ItemSpecialMenu>
  <ItemName>EditMenu</ItemName>
  <ItemText>&amp;Edit</ItemText>
  <ItemIndex>-2147483648</ItemIndex>
  <ItemShortcut></ItemShortcut>
  <MenuAutoEnable>1</MenuAutoEnable>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>0</ItemFlags>
  <Superclass>MenuItem</Superclass>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>EditUndo</ItemName>
   <ItemText>&amp;Undo</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut>Cmd+Z</ItemShortcut>
   <MenuShortcut>Z</MenuShortcut>
   <MenuShortcutModifier>1</MenuShortcutModifier>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>UntitledMenu1</ItemName>
   <ItemText>-</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>EditCut</ItemName>
   <ItemText>Cu&amp;t</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut>Cmd+X</ItemShortcut>
   <MenuShortcut>X</MenuShortcut>
   <MenuShortcutModifier>1</MenuShortcutModifier>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>EditCopy</ItemName>
   <ItemText>&amp;Copy</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut>Cmd+C</ItemShortcut>
   <MenuShortcut>C</MenuShortcut>
   <MenuShortcutModifier>1</MenuShortcutModifier>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>EditPaste</ItemName>
   <ItemText>&amp;Paste</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut>Cmd+V</ItemShortcut>
   <MenuShortcut>V</MenuShortcut>
   <MenuShortcutModifier>1</MenuShortcutModifier>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>EditClear</ItemName>
   <ItemText>#App.kEditClear</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>UntitledMenu0</ItemName>
   <ItemText>-</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>EditSelectAll</ItemName>
   <ItemText>Select &amp;All</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut>Cmd+A</ItemShortcut>
   <MenuShortcut>A</MenuShortcut>
   <MenuShortcutModifier>1</MenuShortcutModifier>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
 </MenuItem>
 <MenuItem>
  <ItemSpecialMenu>0</ItemSpecialMenu>
  <ItemName>ToolsMenu</ItemName>
  <ItemText>&amp;Tools</ItemText>
  <ItemIndex>-2147483648</ItemIndex>
  <ItemShortcut></ItemShortcut>
  <MenuAutoEnable>1</MenuAutoEnable>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>0</ItemFlags>
  <Superclass>MenuItem</Superclass>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>ToolsLoadXSLT</ItemName>
   <ItemText>XSLT Templates...</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>UntitledSeparator3</ItemName>
   <ItemText>-</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>ToolsXPathAnalyzer</ItemName>
   <ItemText>XPath Analyzer...</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>0</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>UntitledSeparator2</ItemName>
   <ItemText>-</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>ToolsTidyXML</ItemName>
   <ItemText>TIDY XML</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>0</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>ToolsTidyXSL</ItemName>
   <ItemText>TIDY XSL</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>0</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>ToolsTidyOutput</ItemName>
   <ItemText>TIDY Output</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>0</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
 </MenuItem>
</block>
<block type="Folder" ID="1727219243">
 <ObjName>Windows</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="Window" ID="1566538455">
 <ObjName>Window_XPathAnalyzer</ObjName>
 <ObjContainerID>1727219243</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>Window</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <HookInstance>
  <ItemName>Open</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Open()</SourceLine>
   <SourceLine>// function: Open</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// If we've entered an XPath previously, put it in the</SourceLine>
   <SourceLine>// TextArea and set the focus to be the end of the line</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Window_Main.previousXPath &lt;&gt; "" Then</SourceLine>
   <SourceLine>TextField_XPath.Text = Window_Main.previousXPath</SourceLine>
   <SourceLine>TextField_XPath.SetFocus()</SourceLine>
   <SourceLine>TextField_XPath.SelStart = TextField_XPath.Text.Len</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>TextField_XPath.Text = ""</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <PropertyVal Name="ImplicitInstance">True</PropertyVal>
 <PropertyVal Name="MenuBar"></PropertyVal>
 <PropertyVal Name="MacProcID">0</PropertyVal>
 <PropertyVal Name="MinimizeButton">True</PropertyVal>
 <PropertyVal Name="MaximizeButton">False</PropertyVal>
 <PropertyVal Name="LiveResize">True</PropertyVal>
 <PropertyVal Name="Resizeable">False</PropertyVal>
 <PropertyVal Name="CloseButton">True</PropertyVal>
 <PropertyVal Name="MenuBarVisible">True</PropertyVal>
 <PropertyVal Name="FullScreen">False</PropertyVal>
 <PropertyVal Name="Visible">True</PropertyVal>
 <PropertyVal Name="Title">XPath Analyzer</PropertyVal>
 <PropertyVal Name="Backdrop"></PropertyVal>
 <PropertyVal Name="BackColor">16777215</PropertyVal>
 <PropertyVal Name="HasBackColor">False</PropertyVal>
 <PropertyVal Name="Composite">False</PropertyVal>
 <PropertyVal Name="Frame">1</PropertyVal>
 <PropertyVal Name="MaxHeight">32000</PropertyVal>
 <PropertyVal Name="MaxWidth">32000</PropertyVal>
 <PropertyVal Name="MinHeight">64</PropertyVal>
 <PropertyVal Name="MinWidth">64</PropertyVal>
 <PropertyVal Name="Height">100</PropertyVal>
 <PropertyVal Name="Width">798</PropertyVal>
 <PropertyVal Name="Placement">0</PropertyVal>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Interfaces</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Placement</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <EditorType>Enum</EditorType>
   <InheritsFrom>Window</InheritsFrom>
   <Enumeration>
    <ItemDef>0 - Default</ItemDef>
    <ItemDef>1 - Parent Window</ItemDef>
    <ItemDef>2 - Main Screen</ItemDef>
    <ItemDef>3 - Parent Window Screen</ItemDef>
    <ItemDef>4 - Stagger</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Width</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>600</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Height</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>400</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinWidth</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>64</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinHeight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>64</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaxWidth</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>32000</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaxHeight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>32000</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Frame</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <EditorType>Enum</EditorType>
   <InheritsFrom>Window</InheritsFrom>
   <Enumeration>
    <ItemDef>0 - Document</ItemDef>
    <ItemDef>1 - Movable Modal</ItemDef>
    <ItemDef>2 - Modal Dialog</ItemDef>
    <ItemDef>3 - Floating Window</ItemDef>
    <ItemDef>4 - Plain Box</ItemDef>
    <ItemDef>5 - Shadowed Box</ItemDef>
    <ItemDef>6 - Rounded Window</ItemDef>
    <ItemDef>7 - Global Floating Window</ItemDef>
    <ItemDef>8 - Sheet Window</ItemDef>
    <ItemDef>9 - Metal Window</ItemDef>
    <ItemDef>10 - Drawer Window</ItemDef>
    <ItemDef>11 - Modeless Dialog</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Composite</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>HasBackColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>BackColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>&amp;hFFFFFF</PropertyValue>
   <ItemType>Color</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Backdrop</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>Picture</ItemType>
   <EditorType>Picture</EditorType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Title</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>Untitled</PropertyValue>
   <ItemType>String</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Visible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>FullScreen</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MenuBarVisible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>CloseButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Resizeable</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LiveResize</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaximizeButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinimizeButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MacProcID</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MenuBar</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>MenuBar</ItemType>
   <EditorType>MenuBar</EditorType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ImplicitInstance</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <EditorType>Boolean</EditorType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
 </ViewBehavior>
 <ControlBehavior>
  <Superclass>Label</Superclass>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>TextField</Superclass>
  <HookInstance>
   <ItemName>TextChange</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub TextChange()</SourceLine>
    <SourceLine>// function: TextChange</SourceLine>
    <SourceLine>// parameters: none</SourceLine>
    <SourceLine>// return: none</SourceLine>
    <SourceLine>//</SourceLine>
    <SourceLine>// Monitor the text in this TextField; when nonempty,</SourceLine>
    <SourceLine>// enable the "Analyze" button</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>If Me.Text &lt;&gt; "" Then</SourceLine>
    <SourceLine>Button_Analyze.Enabled = True</SourceLine>
    <SourceLine>Else</SourceLine>
    <SourceLine>Button_Analyze.Enabled = False</SourceLine>
    <SourceLine>End If</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>// function: Action</SourceLine>
    <SourceLine>// parameters: none</SourceLine>
    <SourceLine>// return: none</SourceLine>
    <SourceLine>//</SourceLine>
    <SourceLine>// Analyze the provided XPath against the XML in the</SourceLine>
    <SourceLine>// XML input TextArea</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>// Run the XPath analysis and store the results</SourceLine>
    <SourceLine>Dim results As String = XmlData.AnalyzeXpath(Window_Main.Container_InputXmlXsl.Container_XmlInput.TextArea_Input.Text, TextField_XPath.Text)</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>// If the results are not Nil, put them into the output window (TIDYed)</SourceLine>
    <SourceLine>If results &lt;&gt; "" Then</SourceLine>
    <SourceLine>Window_Main.Container_InputXmlXsl.TextArea_Output.Text = results</SourceLine>
    <SourceLine>End If</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>// Store this XPath for later use</SourceLine>
    <SourceLine>Window_Main.previousXPath = TextField_XPath.Text</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>// No matter what, close the modal window</SourceLine>
    <SourceLine>Me.Window.Close</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>// function: Action</SourceLine>
    <SourceLine>// parameters: none</SourceLine>
    <SourceLine>// return: none</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>// Clear the previousXPath property</SourceLine>
    <SourceLine>Window_Main.previousXPath = ""</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>// Close the modal window</SourceLine>
    <SourceLine>Me.Window.Close</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <Control>
  <ControlClass>Label</ControlClass>
  <ItemName>Label</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Bold">True</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Transparent">False</PropertyVal>
  <PropertyVal Name="Selectable">False</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Multiline"></PropertyVal>
  <PropertyVal Name="TextColor">0</PropertyVal>
  <PropertyVal Name="TextAlign">0</PropertyVal>
  <PropertyVal Name="Text">XPath to analyze (on Source XML):</PropertyVal>
  <PropertyVal Name="TabIndex">0</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="LockBottom"></PropertyVal>
  <PropertyVal Name="LockRight"></PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">20</PropertyVal>
  <PropertyVal Name="Width">764</PropertyVal>
  <PropertyVal Name="Top">9</PropertyVal>
  <PropertyVal Name="Left">14</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Super">Label</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">Label_AnalyzerHeader</PropertyVal>
  <ControlIndex>0</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>TextField</ControlClass>
  <ItemName>TextField</ItemName>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="AutomaticallyCheckSpelling">False</PropertyVal>
  <PropertyVal Name="Alignment">0</PropertyVal>
  <PropertyVal Name="AcceptTabs"></PropertyVal>
  <PropertyVal Name="LimitText">0</PropertyVal>
  <PropertyVal Name="ReadOnly"></PropertyVal>
  <PropertyVal Name="Mask"></PropertyVal>
  <PropertyVal Name="Text"></PropertyVal>
  <PropertyVal Name="CueText"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Bold"></PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Format"></PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="BackColor">16777215</PropertyVal>
  <PropertyVal Name="TextColor">0</PropertyVal>
  <PropertyVal Name="UseFocusRing">True</PropertyVal>
  <PropertyVal Name="Password"></PropertyVal>
  <PropertyVal Name="Border">True</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex">1</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="LockBottom"></PropertyVal>
  <PropertyVal Name="LockRight"></PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="Width">770</PropertyVal>
  <PropertyVal Name="Top">34</PropertyVal>
  <PropertyVal Name="Left">14</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Super">TextField</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">TextField_XPath</PropertyVal>
  <ControlIndex>1</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Bold"></PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">False</PropertyVal>
  <PropertyVal Name="Cancel"></PropertyVal>
  <PropertyVal Name="Default">True</PropertyVal>
  <PropertyVal Name="Caption">Analyze</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex">2</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="LockBottom"></PropertyVal>
  <PropertyVal Name="LockRight"></PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">20</PropertyVal>
  <PropertyVal Name="Width">80</PropertyVal>
  <PropertyVal Name="Top">68</PropertyVal>
  <PropertyVal Name="Left">704</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">Button_Analyze</PropertyVal>
  <ControlIndex>2</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Bold"></PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Cancel"></PropertyVal>
  <PropertyVal Name="Default"></PropertyVal>
  <PropertyVal Name="Caption">Cancel</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex">3</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="LockBottom"></PropertyVal>
  <PropertyVal Name="LockRight"></PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">20</PropertyVal>
  <PropertyVal Name="Width">80</PropertyVal>
  <PropertyVal Name="Top">68</PropertyVal>
  <PropertyVal Name="Left">14</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">Button_Cancel</PropertyVal>
  <ControlIndex>3</ControlIndex>
  <Locked>0</Locked>
 </Control>
</block>
<block type="Window" ID="1442849415">
 <ObjName>Window_XsltTemplates</ObjName>
 <ObjContainerID>1727219243</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>Window</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <HookInstance>
  <ItemName>Open</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Open()</SourceLine>
   <SourceLine>// function: Open</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// When the window opens, populate the Listbox with</SourceLine>
   <SourceLine>// all XSLT templates saved in the DB</SourceLine>
   <SourceLine>Me.PopulateXsltTemplates()</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <Method>
  <ItemName>PopulateXsltTemplates</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PopulateXsltTemplates()</SourceLine>
   <SourceLine>// function: PopulateXsltTemplates</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Populate the template Listbox with the data</SourceLine>
   <SourceLine>// from the database</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim sql As string</SourceLine>
   <SourceLine>Dim rs As RecordSet</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Select all templates from the DB and insert them into the Listbox</SourceLine>
   <SourceLine>sql = "SELECT id, title, description, transform FROM " + App.DB_TABLE_XSLT_TEMPLATE</SourceLine>
   <SourceLine>rs = App.MainDB.SQLSelect(sql)</SourceLine>
   <SourceLine>App.PopulateListbox(Listbox_TemplateList, rs)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <PropertyVal Name="ImplicitInstance">True</PropertyVal>
 <PropertyVal Name="MenuBar"></PropertyVal>
 <PropertyVal Name="MacProcID">0</PropertyVal>
 <PropertyVal Name="MinimizeButton">True</PropertyVal>
 <PropertyVal Name="MaximizeButton">False</PropertyVal>
 <PropertyVal Name="LiveResize">False</PropertyVal>
 <PropertyVal Name="Resizeable">False</PropertyVal>
 <PropertyVal Name="CloseButton">True</PropertyVal>
 <PropertyVal Name="MenuBarVisible">True</PropertyVal>
 <PropertyVal Name="FullScreen">False</PropertyVal>
 <PropertyVal Name="Visible">True</PropertyVal>
 <PropertyVal Name="Title">Pick an XSLT template to load into editor</PropertyVal>
 <PropertyVal Name="Backdrop"></PropertyVal>
 <PropertyVal Name="BackColor">16777215</PropertyVal>
 <PropertyVal Name="HasBackColor">False</PropertyVal>
 <PropertyVal Name="Composite">True</PropertyVal>
 <PropertyVal Name="Frame">1</PropertyVal>
 <PropertyVal Name="MaxHeight">32000</PropertyVal>
 <PropertyVal Name="MaxWidth">32000</PropertyVal>
 <PropertyVal Name="MinHeight">64</PropertyVal>
 <PropertyVal Name="MinWidth">64</PropertyVal>
 <PropertyVal Name="Height">400</PropertyVal>
 <PropertyVal Name="Width">600</PropertyVal>
 <PropertyVal Name="Placement">0</PropertyVal>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Interfaces</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Placement</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <EditorType>Enum</EditorType>
   <InheritsFrom>Window</InheritsFrom>
   <Enumeration>
    <ItemDef>0 - Default</ItemDef>
    <ItemDef>1 - Parent Window</ItemDef>
    <ItemDef>2 - Main Screen</ItemDef>
    <ItemDef>3 - Parent Window Screen</ItemDef>
    <ItemDef>4 - Stagger</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Width</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>600</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Height</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>400</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinWidth</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>64</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinHeight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>64</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaxWidth</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>32000</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaxHeight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>32000</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Frame</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <EditorType>Enum</EditorType>
   <InheritsFrom>Window</InheritsFrom>
   <Enumeration>
    <ItemDef>0 - Document</ItemDef>
    <ItemDef>1 - Movable Modal</ItemDef>
    <ItemDef>2 - Modal Dialog</ItemDef>
    <ItemDef>3 - Floating Window</ItemDef>
    <ItemDef>4 - Plain Box</ItemDef>
    <ItemDef>5 - Shadowed Box</ItemDef>
    <ItemDef>6 - Rounded Window</ItemDef>
    <ItemDef>7 - Global Floating Window</ItemDef>
    <ItemDef>8 - Sheet Window</ItemDef>
    <ItemDef>9 - Metal Window</ItemDef>
    <ItemDef>10 - Drawer Window</ItemDef>
    <ItemDef>11 - Modeless Dialog</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Composite</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>HasBackColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>BackColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>&amp;hFFFFFF</PropertyValue>
   <ItemType>Color</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Backdrop</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>Picture</ItemType>
   <EditorType>Picture</EditorType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Title</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>Untitled</PropertyValue>
   <ItemType>String</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Visible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>FullScreen</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MenuBarVisible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>CloseButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Resizeable</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LiveResize</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaximizeButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinimizeButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MacProcID</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MenuBar</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>MenuBar</ItemType>
   <EditorType>MenuBar</EditorType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ImplicitInstance</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <EditorType>Boolean</EditorType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
 </ViewBehavior>
 <ControlBehavior>
  <Superclass>AlternatingListBox</Superclass>
  <HookInstance>
   <ItemName>Open</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Open()</SourceLine>
    <SourceLine>// function: Open</SourceLine>
    <SourceLine>// parameters: none</SourceLine>
    <SourceLine>// return: none</SourceLine>
    <SourceLine>//</SourceLine>
    <SourceLine>// Set some opening properties for this Listbox</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>// When opening this Listbox, set the header values</SourceLine>
    <SourceLine>Me.Heading(0) = "ID"</SourceLine>
    <SourceLine>Me.Heading(1) = "Name"</SourceLine>
    <SourceLine>Me.Heading(2) = "Description"</SourceLine>
    <SourceLine>Me.Heading(3) = "Transform"</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>// Allow the columns to be resized</SourceLine>
    <SourceLine>me.ColumnsResizable = True</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
  <HookInstance>
   <ItemName>Change</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Change()</SourceLine>
    <SourceLine>// function: Change</SourceLine>
    <SourceLine>// parameters: none</SourceLine>
    <SourceLine>// return: none</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>// Enable the "Load" and "Delete" buttons only when we've selected a row</SourceLine>
    <SourceLine>if Listbox_TemplateList.ListIndex &lt;&gt; -1 then</SourceLine>
    <SourceLine>Button_Load.Enabled = true</SourceLine>
    <SourceLine>Button_Delete.Enabled = true</SourceLine>
    <SourceLine>end if</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>// function: Action</SourceLine>
    <SourceLine>// parameters: none</SourceLine>
    <SourceLine>// return: none</SourceLine>
    <SourceLine>//</SourceLine>
    <SourceLine>// Close this window</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>// Close the modal window</SourceLine>
    <SourceLine>Me.Window.Close</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>// function: Action</SourceLine>
    <SourceLine>// parameters: none</SourceLine>
    <SourceLine>// return: none</SourceLine>
    <SourceLine>//</SourceLine>
    <SourceLine>// Load the selected template into the XSL input TextArea</SourceLine>
    <SourceLine>// and close the modal window</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>// Populate the XSLT TextArea with the selected XSLT</SourceLine>
    <SourceLine>dim xslToLoad as String = Listbox_TemplateList.Cell(Listbox_TemplateList.ListIndex, 3)</SourceLine>
    <SourceLine>dim textAreaToPopulate as TextArea = Window_Main.Container_InputXmlXsl.Container_XslInput.TextArea_Input</SourceLine>
    <SourceLine>textAreaToPopulate.Text = XmlData.TidyXml(xslToLoad)</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>// Close the modal window</SourceLine>
    <SourceLine>Me.Window.Close</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>// function: Action</SourceLine>
    <SourceLine>// parameters: none</SourceLine>
    <SourceLine>// return: none</SourceLine>
    <SourceLine>//</SourceLine>
    <SourceLine>// Show the Window_ImportXsl window</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>// Show the modal window that allows</SourceLine>
    <SourceLine>// the user to import XSLT templates</SourceLine>
    <SourceLine>Window_ImportXsl.Show()</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>// function: Action</SourceLine>
    <SourceLine>// parameters: none</SourceLine>
    <SourceLine>// return: none</SourceLine>
    <SourceLine>//</SourceLine>
    <SourceLine>// Deletes the selected record from the database</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>dim idToDelete as String = Listbox_TemplateList.Cell(Listbox_TemplateList.ListIndex, 0)</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>// Attempt to delete the selected record</SourceLine>
    <SourceLine>App.MainDB.SQLExecute("DELETE FROM " + App.DB_TABLE_XSLT_TEMPLATE + " WHERE id = '" + idToDelete + "'")</SourceLine>
    <SourceLine>If App.MainDB.Error Then</SourceLine>
    <SourceLine>// If there is some sort of DB error, show it and return</SourceLine>
    <SourceLine>App.DisplayDatabaseError(True)</SourceLine>
    <SourceLine>Return</SourceLine>
    <SourceLine>Else</SourceLine>
    <SourceLine>// If no error, commit the changes to the database and</SourceLine>
    <SourceLine>// repopulate the template Listbox</SourceLine>
    <SourceLine>App.MainDB.Commit()</SourceLine>
    <SourceLine>Window_XsltTemplates.PopulateXsltTemplates()</SourceLine>
    <SourceLine>End If</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <Control>
  <ControlClass>AlternatingListBox</ControlClass>
  <ItemName>AlternatingListBox</ItemName>
  <PropertyVal Name="Name">Listbox_TemplateList</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Top">52</PropertyVal>
  <PropertyVal Name="Width">560</PropertyVal>
  <PropertyVal Name="Height">296</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight"></PropertyVal>
  <PropertyVal Name="LockBottom"></PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">0</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Border">True</PropertyVal>
  <PropertyVal Name="ColumnCount">4</PropertyVal>
  <PropertyVal Name="ColumnWidths">10%,20%,30%,40%</PropertyVal>
  <PropertyVal Name="HasHeading">True</PropertyVal>
  <PropertyVal Name="UseFocusRing">True</PropertyVal>
  <PropertyVal Name="InitialValue"></PropertyVal>
  <PropertyVal Name="HeadingIndex">-1</PropertyVal>
  <PropertyVal Name="ScrollbarHorizontal"></PropertyVal>
  <PropertyVal Name="ScrollBarVertical">True</PropertyVal>
  <PropertyVal Name="GridLinesHorizontal">0</PropertyVal>
  <PropertyVal Name="GridLinesVertical">0</PropertyVal>
  <PropertyVal Name="DefaultRowHeight">-1</PropertyVal>
  <PropertyVal Name="_ScrollWidth">-1</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="Bold"></PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="Hierarchical"></PropertyVal>
  <PropertyVal Name="EnableDrag"></PropertyVal>
  <PropertyVal Name="EnableDragReorder"></PropertyVal>
  <PropertyVal Name="RequiresSelection"></PropertyVal>
  <PropertyVal Name="SelectionType">0</PropertyVal>
  <PropertyVal Name="ColumnsResizable"></PropertyVal>
  <PropertyVal Name="AutoHideScrollbars">True</PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Super">AlternatingListBox</PropertyVal>
  <ControlIndex>0</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="Name">Button_Cancel</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Top">363</PropertyVal>
  <PropertyVal Name="Width">80</PropertyVal>
  <PropertyVal Name="Height">20</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight"></PropertyVal>
  <PropertyVal Name="LockBottom"></PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">1</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Caption">Cancel</PropertyVal>
  <PropertyVal Name="Default"></PropertyVal>
  <PropertyVal Name="Cancel">False</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="Bold"></PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>1</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="Name">Button_Load</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">500</PropertyVal>
  <PropertyVal Name="Top">363</PropertyVal>
  <PropertyVal Name="Width">80</PropertyVal>
  <PropertyVal Name="Height">20</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight"></PropertyVal>
  <PropertyVal Name="LockBottom"></PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">2</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Caption">Load</PropertyVal>
  <PropertyVal Name="Default"></PropertyVal>
  <PropertyVal Name="Cancel"></PropertyVal>
  <PropertyVal Name="Enabled">False</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="Bold"></PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>2</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="Name">Button_Define</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Top">18</PropertyVal>
  <PropertyVal Name="Width">80</PropertyVal>
  <PropertyVal Name="Height">20</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight"></PropertyVal>
  <PropertyVal Name="LockBottom"></PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">3</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Caption">New</PropertyVal>
  <PropertyVal Name="Default">False</PropertyVal>
  <PropertyVal Name="Cancel"></PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="Bold"></PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>3</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="Name">Button_Delete</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">112</PropertyVal>
  <PropertyVal Name="Top">18</PropertyVal>
  <PropertyVal Name="Width">80</PropertyVal>
  <PropertyVal Name="Height">20</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight"></PropertyVal>
  <PropertyVal Name="LockBottom"></PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">4</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Caption">Delete</PropertyVal>
  <PropertyVal Name="Default">False</PropertyVal>
  <PropertyVal Name="Cancel"></PropertyVal>
  <PropertyVal Name="Enabled">False</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="Bold"></PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>4</ControlIndex>
  <Locked>0</Locked>
 </Control>
</block>
<block type="Window" ID="531424011">
 <ObjName>Window_Main</ObjName>
 <ObjContainerID>1727219243</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>Window</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <HookInstance>
  <ItemName>EnableMenuItems</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub EnableMenuItems()</SourceLine>
   <SourceLine>// function: EnableMenuItems</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Determines what menu options to enable/disable in the Window_Main window</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>EnableFunctions()</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <MenuHandler>
  <ItemName>FileTransform</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function FileTransform() As Boolean</SourceLine>
   <SourceLine>// function: FileTransform</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>TransformData()</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </MenuHandler>
 <MenuHandler>
  <ItemName>ToolsTidyXML</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ToolsTidyXML() As Boolean</SourceLine>
   <SourceLine>// function: ToolsTidyXML</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>TidyXml()</SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </MenuHandler>
 <MenuHandler>
  <ItemName>ToolsTidyXSL</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ToolsTidyXSL() As Boolean</SourceLine>
   <SourceLine>// function: ToolsTidyXSL</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>TidyXsl()</SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </MenuHandler>
 <MenuHandler>
  <ItemName>FileOpenXML</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function FileOpenXML() As Boolean</SourceLine>
   <SourceLine>// function: FileOpenXML</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Me.OpenXmlFile()</SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </MenuHandler>
 <MenuHandler>
  <ItemName>FileOpenXSLT</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function FileOpenXSLT() As Boolean</SourceLine>
   <SourceLine>// function: FileOpenXMLT</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Me.OpenXsltFile()</SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </MenuHandler>
 <MenuHandler>
  <ItemName>ToolsTidyOutput</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ToolsTidyOutput() As Boolean</SourceLine>
   <SourceLine>// function: ToolsTidyOutput</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>TidyOutput()</SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </MenuHandler>
 <MenuHandler>
  <ItemName>FileSaveXML</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function FileSaveXML() As Boolean</SourceLine>
   <SourceLine>// function: FileSaveXML</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>SaveXmlFile()</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </MenuHandler>
 <MenuHandler>
  <ItemName>FileSaveXSLT</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function FileSaveXSLT() As Boolean</SourceLine>
   <SourceLine>// function: FileSaveXSLT</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>SaveXsltFile()</SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </MenuHandler>
 <MenuHandler>
  <ItemName>FileSaveOutput</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function FileSaveOutput() As Boolean</SourceLine>
   <SourceLine>// function: FileSaveOutput</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>SaveOutputFile()</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </MenuHandler>
 <MenuHandler>
  <ItemName>FileQuit</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function FileQuit() As Boolean</SourceLine>
   <SourceLine>// function: FileQuit</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Quit</SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </MenuHandler>
 <MenuHandler>
  <ItemName>ToolsLoadXSLT</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ToolsLoadXSLT() As Boolean</SourceLine>
   <SourceLine>// function: ToolsLoadXSLT</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Window_XSLTTemplates.Show()</SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </MenuHandler>
 <MenuHandler>
  <ItemName>ToolsXPathAnalyzer</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ToolsXPathAnalyzer() As Boolean</SourceLine>
   <SourceLine>// function: ToolsXPathAnalyzer</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Window_XPathAnalyzer.Show()</SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </MenuHandler>
 <Method>
  <ItemName>OpenXmlFile</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub OpenXmlFile()</SourceLine>
   <SourceLine>// function OpenXmlFile</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Opens an XML file and places its contents in the XML input TextArea;</SourceLine>
   <SourceLine>// also change the label</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim inputToPopulate As TextArea = Container_InputXmlXsl.Container_XmlInput.TextArea_Input</SourceLine>
   <SourceLine>Dim labelValue As Label = Container_InputXmlXsl.Container_XmlInput.Label_Value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Me._PopulateTextAndLabel(inputToPopulate, labelValue)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>OpenXsltFile</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub OpenXsltFile()</SourceLine>
   <SourceLine>// function OpenXmlFile</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Opens an XSLT file and places its contents in the XSL input TextArea;</SourceLine>
   <SourceLine>// also change the label</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim inputToPopulate As TextArea = Container_InputXmlXsl.Container_XslInput.TextArea_Input</SourceLine>
   <SourceLine>Dim labelValue As Label = Container_InputXmlXsl.Container_XslInput.Label_Value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Me._PopulateTextAndLabel(inputToPopulate, labelValue)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SaveXmlFile</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SaveXmlFile()</SourceLine>
   <SourceLine>// function: SaveXmlFile</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Save the text in the Output TextArea to a file</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>XmlData.SaveXMLToFile(Container_InputXmlXsl.Container_XmlInput.TextArea_Input.Text, "Source XML.xml")</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SaveXsltFile</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SaveXsltFile()</SourceLine>
   <SourceLine>// function: SaveXsltFile</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Save the text in the Output TextArea to a file</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>XmlData.SaveXMLToFile(Container_InputXmlXsl.Container_XslInput.TextArea_Input.Text, "Source XSL.xml")</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TransformData</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TransformData()</SourceLine>
   <SourceLine>// function:TransformData</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Create a new XML document, load the sourced XML into it,</SourceLine>
   <SourceLine>// and run the provided XSLT against it</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim xmlTextArea As TextArea = Container_InputXmlXsl.Container_XmlInput.TextArea_Input</SourceLine>
   <SourceLine>Dim xslTextArea As TextArea = Container_InputXmlXsl.Container_XslInput.TextArea_Input</SourceLine>
   <SourceLine>Dim outputTextArea As TextArea = Container_InputXmlXsl.TextArea_Output</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputTextArea.Text = XmlData.TransformXml(xmlTextArea.Text, xslTextArea.Text)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SaveOutputFile</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SaveOutputFile()</SourceLine>
   <SourceLine>// function: SaveOutputFile</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Save the text in the Output TextArea to a file</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>XmlData.SaveXMLToFile(Container_InputXmlXsl.TextArea_Output.Text, "Output.xml")</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TidyXml</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TidyXml()</SourceLine>
   <SourceLine>// function: TidyXml</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// TIDY the XML in the XML input TextArea</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Container_InputXmlXsl.Container_XmlInput.TextArea_Input.Text &lt;&gt; "" Then</SourceLine>
   <SourceLine>Container_InputXmlXsl.Container_XmlInput.TextArea_Input.Text = XmlData.TidyXml(Container_InputXmlXsl.Container_XmlInput.TextArea_Input.Text)</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>App.DisplayWarningMsg("No XML data to TIDY." + EndOfLine + EndOfLine + "Please input some valid XML before TIDYing.")</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TidyXsl</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TidyXsl()</SourceLine>
   <SourceLine>// function: TidyXsl</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// TIDY the XSL in the XSL input TextArea</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Container_InputXmlXsl.Container_XslInput.TextArea_Input.Text &lt;&gt; "" Then</SourceLine>
   <SourceLine>Container_InputXmlXsl.Container_XslInput.TextArea_Input.Text = XmlData.TidyXml(Container_InputXmlXsl.Container_XslInput.TextArea_Input.Text)</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>App.DisplayWarningMsg("No XSL data to TIDY." + EndOfLine + EndOfLine + "Please input some valid XSL before TIDYing.")</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TidyOutput</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TidyOutput()</SourceLine>
   <SourceLine>// function: TidyOutput</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// TIDY the XML in the Output TextArea</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Container_InputXmlXsl.TextArea_Output.Text &lt;&gt; "" Then</SourceLine>
   <SourceLine>Container_InputXmlXsl.TextArea_Output.Text = XmlData.TidyXml(Container_InputXmlXsl.TextArea_Output.Text)</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>App.DisplayWarningMsg("No XML data to TIDY." + EndOfLine + EndOfLine + "Please run the Transform operation (with valid XML and XSL) before attempting to TIDY the output.")</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>_PopulateTextAndLabel</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub _PopulateTextAndLabel(targetTextArea As TextArea, targetLabel As Label)</SourceLine>
   <SourceLine>// function: _PopulateTextAndLabel</SourceLine>
   <SourceLine>// parameters: targetTextArea As TextArea, targetLabel As Label</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Populate a text area with a file's contents and change its label</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Define the input area, the label to affect, and the filetypes</SourceLine>
   <SourceLine>Dim xmlFiletypes As FileType = FileTypes_XmlFiletypes.TextXml</SourceLine>
   <SourceLine>Dim fileInfo() As String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Prompt the user to open a file and use its values</SourceLine>
   <SourceLine>fileInfo = App.OpenTextFile(xmlFiletypes)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If fileInfo &lt;&gt; Nil Then</SourceLine>
   <SourceLine>targetTextArea.Text = fileInfo(1)</SourceLine>
   <SourceLine>targetLabel.Text = fileInfo(0)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>targetTextArea As TextArea, targetLabel As Label</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>EnableFunctions</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub EnableFunctions(forMenu As Boolean = True, forToolbar As Boolean = True)</SourceLine>
   <SourceLine>// function: EnableFunctions</SourceLine>
   <SourceLine>// parameters: forMenu As Boolean = True, forToolbar As Boolean = True</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Determines what functions to enable.  Can handle both ToolbarItems and</SourceLine>
   <SourceLine>// MenuItems</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Container_InputXmlXsl.Container_XmlInput.TextArea_Input.Text &lt;&gt; "" Then</SourceLine>
   <SourceLine>if Container_InputXmlXsl.Container_XslInput.TextArea_Input.Text &lt;&gt; "" Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// In this case, we have enough data to enable the following functions:</SourceLine>
   <SourceLine>//    1. Save XSL</SourceLine>
   <SourceLine>//    2. TIDY XSL</SourceLine>
   <SourceLine>//    3. Transform</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If forMenu Then</SourceLine>
   <SourceLine>FileSaveXSLT.Enable</SourceLine>
   <SourceLine>ToolsTidyXSL.Enable</SourceLine>
   <SourceLine>FileTransform.Enable</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If forToolbar Then</SourceLine>
   <SourceLine>Window_Main.Toolbar_MainToolbar.Item(4).Enabled = True</SourceLine>
   <SourceLine>Window_Main.Toolbar_MainToolbar.Item(10).Enabled = True</SourceLine>
   <SourceLine>Window_Main.Toolbar_MainToolbar.Item(7).Enabled = True</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// In this case, we have enough data to disable the following functions:</SourceLine>
   <SourceLine>//    1. Save XSL</SourceLine>
   <SourceLine>//    2. TIDY XSL</SourceLine>
   <SourceLine>//    3. Transform</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If forToolbar Then</SourceLine>
   <SourceLine>Window_Main.Toolbar_MainToolbar.Item(4).Enabled = False</SourceLine>
   <SourceLine>Window_Main.Toolbar_MainToolbar.Item(10).Enabled = False</SourceLine>
   <SourceLine>Window_Main.Toolbar_MainToolbar.Item(7).Enabled = False</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// In this case, we have enough data to enable the following functions:</SourceLine>
   <SourceLine>//    1. Save XML</SourceLine>
   <SourceLine>//    2. TIDY XML</SourceLine>
   <SourceLine>//    3. XPath Analyzer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If forMenu Then</SourceLine>
   <SourceLine>FileSaveXML.Enable</SourceLine>
   <SourceLine>ToolsTidyXML.Enable</SourceLine>
   <SourceLine>ToolsXPathAnalyzer.Enable</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If forToolbar Then</SourceLine>
   <SourceLine>Window_Main.Toolbar_MainToolbar.Item(3).Enabled = True</SourceLine>
   <SourceLine>Window_Main.Toolbar_MainToolbar.Item(9).Enabled = True</SourceLine>
   <SourceLine>// TODO: ToolbarItem for XPath Anaylzer</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>ElseIf Container_InputXmlXsl.Container_XslInput.TextArea_Input.Text &lt;&gt; "" Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// In this case, we have enough data to enable the following functions:</SourceLine>
   <SourceLine>//    1. Save XSL</SourceLine>
   <SourceLine>//    2. TIDY XSL</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If forMenu Then</SourceLine>
   <SourceLine>FileSaveXSLT.Enable</SourceLine>
   <SourceLine>ToolsTidyXSL.Enable</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If forToolbar Then</SourceLine>
   <SourceLine>Window_Main.Toolbar_MainToolbar.Item(4).Enabled = True</SourceLine>
   <SourceLine>Window_Main.Toolbar_MainToolbar.Item(10).Enabled = True</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>If forToolbar Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// In this case, we have enough data to disable the following functions:</SourceLine>
   <SourceLine>//    1. Save XML</SourceLine>
   <SourceLine>//    2. TIDY XML</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Window_Main.Toolbar_MainToolbar.Item(3).Enabled = False</SourceLine>
   <SourceLine>Window_Main.Toolbar_MainToolbar.Item(9).Enabled = False</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Container_InputXmlXsl.TextArea_Output.Text &lt;&gt; "" Then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// In this case, we have enough data to enable the following functions:</SourceLine>
   <SourceLine>//    1. Save Output</SourceLine>
   <SourceLine>//    2. TIDY Output</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If forMenu Then</SourceLine>
   <SourceLine>FileSaveOutput.Enable</SourceLine>
   <SourceLine>ToolsTidyOutput.Enable</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If forToolbar Then</SourceLine>
   <SourceLine>Window_Main.Toolbar_MainToolbar.Item(5).Enabled = True</SourceLine>
   <SourceLine>Window_Main.Toolbar_MainToolbar.Item(11).Enabled = True</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>forMenu As Boolean = True, forToolbar As Boolean = True</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>previousXPath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>previousXPath As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>previousXPath As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <PropertyVal Name="ImplicitInstance">True</PropertyVal>
 <PropertyVal Name="MenuBar">258881810</PropertyVal>
 <PropertyVal Name="MacProcID">0</PropertyVal>
 <PropertyVal Name="MinimizeButton">True</PropertyVal>
 <PropertyVal Name="MaximizeButton">True</PropertyVal>
 <PropertyVal Name="LiveResize">True</PropertyVal>
 <PropertyVal Name="Resizeable">True</PropertyVal>
 <PropertyVal Name="CloseButton">True</PropertyVal>
 <PropertyVal Name="MenuBarVisible">True</PropertyVal>
 <PropertyVal Name="FullScreen">False</PropertyVal>
 <PropertyVal Name="Visible">True</PropertyVal>
 <PropertyVal Name="Title">aXel - Aaron's XSLT Editor/Library</PropertyVal>
 <PropertyVal Name="Backdrop"></PropertyVal>
 <PropertyVal Name="BackColor">16777215</PropertyVal>
 <PropertyVal Name="HasBackColor">False</PropertyVal>
 <PropertyVal Name="Composite">False</PropertyVal>
 <PropertyVal Name="Frame">0</PropertyVal>
 <PropertyVal Name="MaxHeight">32000</PropertyVal>
 <PropertyVal Name="MaxWidth">32000</PropertyVal>
 <PropertyVal Name="MinHeight">64</PropertyVal>
 <PropertyVal Name="MinWidth">64</PropertyVal>
 <PropertyVal Name="Height">770</PropertyVal>
 <PropertyVal Name="Width">1142</PropertyVal>
 <PropertyVal Name="Placement">0</PropertyVal>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Interfaces</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Placement</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <EditorType>Enum</EditorType>
   <InheritsFrom>Window</InheritsFrom>
   <Enumeration>
    <ItemDef>0 - Default</ItemDef>
    <ItemDef>1 - Parent Window</ItemDef>
    <ItemDef>2 - Main Screen</ItemDef>
    <ItemDef>3 - Parent Window Screen</ItemDef>
    <ItemDef>4 - Stagger</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Width</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>600</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Height</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>400</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinWidth</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>64</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinHeight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>64</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaxWidth</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>32000</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaxHeight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>32000</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Frame</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <EditorType>Enum</EditorType>
   <InheritsFrom>Window</InheritsFrom>
   <Enumeration>
    <ItemDef>0 - Document</ItemDef>
    <ItemDef>1 - Movable Modal</ItemDef>
    <ItemDef>2 - Modal Dialog</ItemDef>
    <ItemDef>3 - Floating Window</ItemDef>
    <ItemDef>4 - Plain Box</ItemDef>
    <ItemDef>5 - Shadowed Box</ItemDef>
    <ItemDef>6 - Rounded Window</ItemDef>
    <ItemDef>7 - Global Floating Window</ItemDef>
    <ItemDef>8 - Sheet Window</ItemDef>
    <ItemDef>9 - Metal Window</ItemDef>
    <ItemDef>10 - Drawer Window</ItemDef>
    <ItemDef>11 - Modeless Dialog</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Composite</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>HasBackColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>BackColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>&amp;hFFFFFF</PropertyValue>
   <ItemType>Color</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Backdrop</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>Picture</ItemType>
   <EditorType>Picture</EditorType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Title</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>Untitled</PropertyValue>
   <ItemType>String</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Visible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>FullScreen</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MenuBarVisible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>CloseButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Resizeable</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LiveResize</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaximizeButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinimizeButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MacProcID</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MenuBar</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>MenuBar</ItemType>
   <EditorType>MenuBar</EditorType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ImplicitInstance</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <EditorType>Boolean</EditorType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
 </ViewBehavior>
 <ControlBehavior>
  <Superclass>Container_XmlXslInput</Superclass>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>MainToolbar</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action(item As ToolItem)</SourceLine>
    <SourceLine>// function: Action</SourceLine>
    <SourceLine>// parameters: item as ToolItem</SourceLine>
    <SourceLine>// return: none</SourceLine>
    <SourceLine>//</SourceLine>
    <SourceLine>// Determines actions for each of the items in the main toolbar</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>Select Case item.Name</SourceLine>
    <SourceLine>Case "OpenXml"</SourceLine>
    <SourceLine>Window_Main.OpenXmlFile()</SourceLine>
    <SourceLine>Case "OpenXslt"</SourceLine>
    <SourceLine>Window_Main.OpenXsltFile()</SourceLine>
    <SourceLine>Case "SaveXml"</SourceLine>
    <SourceLine>Window_Main.SaveXmlFile()</SourceLine>
    <SourceLine>Case "SaveXslt"</SourceLine>
    <SourceLine>Window_Main.SaveXsltFile()</SourceLine>
    <SourceLine>Case "SaveOutput"</SourceLine>
    <SourceLine>Window_Main.SaveOutputFile()</SourceLine>
    <SourceLine>Case "Transform"</SourceLine>
    <SourceLine>Window_Main.TransformData()</SourceLine>
    <SourceLine>Case "TidyXml"</SourceLine>
    <SourceLine>Window_Main.TidyXml()</SourceLine>
    <SourceLine>Case "TidyXsl"</SourceLine>
    <SourceLine>Window_Main.TidyXsl()</SourceLine>
    <SourceLine>Case "TidyOutput"</SourceLine>
    <SourceLine>Window_Main.TidyOutput()</SourceLine>
    <SourceLine>End Select</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <Control>
  <ControlClass>Container_XmlXslInput</ControlClass>
  <ItemName>Container_XmlXslInput</ItemName>
  <PropertyVal Name="EraseBackground">True</PropertyVal>
  <PropertyVal Name="AcceptTabs">True</PropertyVal>
  <PropertyVal Name="AcceptFocus"></PropertyVal>
  <PropertyVal Name="Backdrop"></PropertyVal>
  <PropertyVal Name="BackColor">16777215</PropertyVal>
  <PropertyVal Name="HasBackColor">False</PropertyVal>
  <PropertyVal Name="UseFocusRing"></PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="TabIndex">7</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="LockBottom">True</PropertyVal>
  <PropertyVal Name="LockRight">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="Height">730</PropertyVal>
  <PropertyVal Name="Width">1102</PropertyVal>
  <PropertyVal Name="Top">20</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Super">Container_XmlXslInput</PropertyVal>
  <PropertyVal Name="Name">Container_InputXmlXsl</PropertyVal>
  <ControlIndex>0</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>MainToolbar</ControlClass>
  <ItemName>MainToolbar</ItemName>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Height">41</PropertyVal>
  <PropertyVal Name="Width">1102</PropertyVal>
  <PropertyVal Name="Top">-76</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Super">MainToolbar</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Name">Toolbar_MainToolbar</PropertyVal>
  <ControlIndex>1</ControlIndex>
  <Locked>0</Locked>
 </Control>
</block>
<block type="Folder" ID="1837377408">
 <ObjName>File Type Sets</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="FileTypes" ID="970735771">
 <ObjName>FileTypes_XmlFiletypes</ObjName>
 <ObjContainerID>1837377408</ObjContainerID>
 <FileType>
  <ItemName>text/xml</ItemName>
  <MacCreator>????</MacCreator>
  <ItemType>TEXT</ItemType>
  <ItemDef>.xml;.xsl</ItemDef>
  <ItemFlags>0</ItemFlags>
  <UTIType>public.text</UTIType>
  <ObjName>TextXml</ObjName>
 </FileType>
</block>
<block type="Folder" ID="593691927">
 <ObjName>Plugins</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="Folder" ID="1658580157">
 <ObjName>Window Splitter</ObjName>
 <ObjContainerID>593691927</ObjContainerID>
</block>
<block type="Folder" ID="78201623">
 <ObjName>SyntaxHighlightEditField</ObjName>
 <ObjContainerID>593691927</ObjContainerID>
</block>
<block type="Folder" ID="491636048">
 <ObjName>Databases</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="Database" ID="1107950397">
 <ObjName>Database_MainDB</ObjName>
 <ObjContainerID>491636048</ObjContainerID>
 <ItemType>realsql</ItemType>
 <ItemData><Hex bytes="148">0000000366696C656E616D653D64617461626173652532457273640A75726C706174683D66696C653A2F2F6C6F63616C686F73742F55736572732F61626163682F4769742F6158656C2F5265736F75726365732F64617461626173652E7273640A72656C6174697665706174683D5265736F757263657325354364617461626173652532457273640A6372656174653D74727565</Hex></ItemData>
</block>
<block type="Window" ID="981196654">
 <ObjName>Window_ImportXsl</ObjName>
 <ObjContainerID>1727219243</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>Window</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>IsDataEntered</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsDataEntered() As Boolean</SourceLine>
   <SourceLine>// function: IsDataEntered</SourceLine>
   <SourceLine>// parameters: none</SourceLine>
   <SourceLine>// return: Boolean</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Loosely require all three fields in this window to have text</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if TextField_Title.Text &lt;&gt; "" and TextField_Description.Text &lt;&gt; "" and TextArea_Transform.Text &lt;&gt; "" then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <PropertyVal Name="ImplicitInstance">True</PropertyVal>
 <PropertyVal Name="MenuBar"></PropertyVal>
 <PropertyVal Name="MacProcID">0</PropertyVal>
 <PropertyVal Name="MinimizeButton">True</PropertyVal>
 <PropertyVal Name="MaximizeButton">False</PropertyVal>
 <PropertyVal Name="LiveResize">False</PropertyVal>
 <PropertyVal Name="Resizeable">False</PropertyVal>
 <PropertyVal Name="CloseButton">True</PropertyVal>
 <PropertyVal Name="MenuBarVisible">True</PropertyVal>
 <PropertyVal Name="FullScreen">False</PropertyVal>
 <PropertyVal Name="Visible">True</PropertyVal>
 <PropertyVal Name="Title">Define XSLT Template</PropertyVal>
 <PropertyVal Name="Backdrop"></PropertyVal>
 <PropertyVal Name="BackColor">16777215</PropertyVal>
 <PropertyVal Name="HasBackColor">False</PropertyVal>
 <PropertyVal Name="Composite">True</PropertyVal>
 <PropertyVal Name="Frame">1</PropertyVal>
 <PropertyVal Name="MaxHeight">32000</PropertyVal>
 <PropertyVal Name="MaxWidth">32000</PropertyVal>
 <PropertyVal Name="MinHeight">64</PropertyVal>
 <PropertyVal Name="MinWidth">64</PropertyVal>
 <PropertyVal Name="Height">400</PropertyVal>
 <PropertyVal Name="Width">600</PropertyVal>
 <PropertyVal Name="Placement">4</PropertyVal>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Interfaces</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Placement</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <EditorType>Enum</EditorType>
   <InheritsFrom>Window</InheritsFrom>
   <Enumeration>
    <ItemDef>0 - Default</ItemDef>
    <ItemDef>1 - Parent Window</ItemDef>
    <ItemDef>2 - Main Screen</ItemDef>
    <ItemDef>3 - Parent Window Screen</ItemDef>
    <ItemDef>4 - Stagger</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Width</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>600</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Height</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>400</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinWidth</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>64</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinHeight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>64</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaxWidth</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>32000</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaxHeight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>32000</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Frame</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <EditorType>Enum</EditorType>
   <InheritsFrom>Window</InheritsFrom>
   <Enumeration>
    <ItemDef>0 - Document</ItemDef>
    <ItemDef>1 - Movable Modal</ItemDef>
    <ItemDef>2 - Modal Dialog</ItemDef>
    <ItemDef>3 - Floating Window</ItemDef>
    <ItemDef>4 - Plain Box</ItemDef>
    <ItemDef>5 - Shadowed Box</ItemDef>
    <ItemDef>6 - Rounded Window</ItemDef>
    <ItemDef>7 - Global Floating Window</ItemDef>
    <ItemDef>8 - Sheet Window</ItemDef>
    <ItemDef>9 - Metal Window</ItemDef>
    <ItemDef>10 - Drawer Window</ItemDef>
    <ItemDef>11 - Modeless Dialog</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Composite</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>HasBackColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>BackColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>&amp;hFFFFFF</PropertyValue>
   <ItemType>Color</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Backdrop</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>Picture</ItemType>
   <EditorType>Picture</EditorType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Title</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>Untitled</PropertyValue>
   <ItemType>String</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Visible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>FullScreen</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MenuBarVisible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>CloseButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Resizeable</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LiveResize</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaximizeButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinimizeButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MacProcID</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MenuBar</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>MenuBar</ItemType>
   <EditorType>MenuBar</EditorType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ImplicitInstance</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <EditorType>Boolean</EditorType>
   <InheritsFrom>Window</InheritsFrom>
  </ViewProperty>
 </ViewBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>// function: Action</SourceLine>
    <SourceLine>// parameters: none</SourceLine>
    <SourceLine>// return: none</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>// Close the modal window</SourceLine>
    <SourceLine>Me.Window.Close</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>// function: Action</SourceLine>
    <SourceLine>// parameters: none</SourceLine>
    <SourceLine>// return: none</SourceLine>
    <SourceLine>//</SourceLine>
    <SourceLine>// Saves the entered data as a new XSLT into the database</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>// Create a new DB record with this transform</SourceLine>
    <SourceLine>Dim record As New DatabaseRecord</SourceLine>
    <SourceLine>record.Column("title") = TextField_Title.Text</SourceLine>
    <SourceLine>record.Column("description") = TextField_Description.Text</SourceLine>
    <SourceLine>record.Column("transform") = TextArea_Transform.Text</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>// Create the InsertRecord</SourceLine>
    <SourceLine>App.MainDB.InsertRecord(App.DB_TABLE_XSLT_TEMPLATE, record)</SourceLine>
    <SourceLine>If App.MainDB.Error Then</SourceLine>
    <SourceLine>// If there is some sort of DB error, show it and return</SourceLine>
    <SourceLine>App.DisplayDatabaseError(True)</SourceLine>
    <SourceLine>Return</SourceLine>
    <SourceLine>Else</SourceLine>
    <SourceLine>// If no error, commit the changes to the database,</SourceLine>
    <SourceLine>// repopulate the Listbox with all saved XSLT</SourceLine>
    <SourceLine>// templates, and close the modal window</SourceLine>
    <SourceLine>App.MainDB.Commit()</SourceLine>
    <SourceLine>Window_XsltTemplates.PopulateXsltTemplates()</SourceLine>
    <SourceLine>Me.Window.Close</SourceLine>
    <SourceLine>End If</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>Label</Superclass>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>Label</Superclass>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>Label</Superclass>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>TextField</Superclass>
  <HookInstance>
   <ItemName>TextChange</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub TextChange()</SourceLine>
    <SourceLine>// function: TextChange</SourceLine>
    <SourceLine>// parameters: none</SourceLine>
    <SourceLine>// return: none</SourceLine>
    <SourceLine>//</SourceLine>
    <SourceLine>// Only enable the "Save" button if all</SourceLine>
    <SourceLine>// three fields have some text</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>If IsDataEntered() Then</SourceLine>
    <SourceLine>Button_Save.Enabled = True</SourceLine>
    <SourceLine>Else</SourceLine>
    <SourceLine>Button_Save.Enabled = False</SourceLine>
    <SourceLine>End If</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>TextField</Superclass>
  <HookInstance>
   <ItemName>TextChange</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub TextChange()</SourceLine>
    <SourceLine>// function: TextChange</SourceLine>
    <SourceLine>// parameters: none</SourceLine>
    <SourceLine>// return: none</SourceLine>
    <SourceLine>//</SourceLine>
    <SourceLine>// Only enable the "Save" button if all</SourceLine>
    <SourceLine>// three fields have some text</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>If IsDataEntered() Then</SourceLine>
    <SourceLine>Button_Save.Enabled = True</SourceLine>
    <SourceLine>Else</SourceLine>
    <SourceLine>Button_Save.Enabled = False</SourceLine>
    <SourceLine>End If</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>SyntaxHighlightEditField</Superclass>
  <HookInstance>
   <ItemName>TextChange</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub TextChange()</SourceLine>
    <SourceLine>// function: TextChange</SourceLine>
    <SourceLine>// parameters: none</SourceLine>
    <SourceLine>// return: none</SourceLine>
    <SourceLine>//</SourceLine>
    <SourceLine>// Only enable the "Save" button if all</SourceLine>
    <SourceLine>// three fields have some text</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>If IsDataEntered() Then</SourceLine>
    <SourceLine>Button_Save.Enabled = True</SourceLine>
    <SourceLine>Else</SourceLine>
    <SourceLine>Button_Save.Enabled = False</SourceLine>
    <SourceLine>End If</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="Name">Button_Cancel</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Top">364</PropertyVal>
  <PropertyVal Name="Width">80</PropertyVal>
  <PropertyVal Name="Height">20</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight"></PropertyVal>
  <PropertyVal Name="LockBottom"></PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">1</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Caption">Cancel</PropertyVal>
  <PropertyVal Name="Default"></PropertyVal>
  <PropertyVal Name="Cancel"></PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="Bold"></PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>0</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="Name">Button_Save</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">500</PropertyVal>
  <PropertyVal Name="Top">364</PropertyVal>
  <PropertyVal Name="Width">80</PropertyVal>
  <PropertyVal Name="Height">20</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight"></PropertyVal>
  <PropertyVal Name="LockBottom"></PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">2</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Caption">Save</PropertyVal>
  <PropertyVal Name="Default"></PropertyVal>
  <PropertyVal Name="Cancel"></PropertyVal>
  <PropertyVal Name="Enabled">False</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="Bold"></PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>1</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>Label</ControlClass>
  <ItemName>Label</ItemName>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Name">Label_Title</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Top">14</PropertyVal>
  <PropertyVal Name="Width">48</PropertyVal>
  <PropertyVal Name="Height">20</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight"></PropertyVal>
  <PropertyVal Name="LockBottom"></PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">3</PropertyVal>
  <PropertyVal Name="Text">Title:</PropertyVal>
  <PropertyVal Name="TextAlign">0</PropertyVal>
  <PropertyVal Name="TextColor">0</PropertyVal>
  <PropertyVal Name="Multiline"></PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Selectable">False</PropertyVal>
  <PropertyVal Name="Transparent">False</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="Bold">True</PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Super">Label</PropertyVal>
  <ControlIndex>2</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>Label</ControlClass>
  <ItemName>Label</ItemName>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Name">Label_Title1</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Top">46</PropertyVal>
  <PropertyVal Name="Width">90</PropertyVal>
  <PropertyVal Name="Height">20</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight"></PropertyVal>
  <PropertyVal Name="LockBottom"></PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">4</PropertyVal>
  <PropertyVal Name="Text">Description:</PropertyVal>
  <PropertyVal Name="TextAlign">0</PropertyVal>
  <PropertyVal Name="TextColor">0</PropertyVal>
  <PropertyVal Name="Multiline"></PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Selectable">False</PropertyVal>
  <PropertyVal Name="Transparent">False</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="Bold">True</PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Super">Label</PropertyVal>
  <ControlIndex>3</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>Label</ControlClass>
  <ItemName>Label</ItemName>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Name">Label_Title11</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Top">78</PropertyVal>
  <PropertyVal Name="Width">90</PropertyVal>
  <PropertyVal Name="Height">20</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight"></PropertyVal>
  <PropertyVal Name="LockBottom"></PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">5</PropertyVal>
  <PropertyVal Name="Text">XSL:</PropertyVal>
  <PropertyVal Name="TextAlign">0</PropertyVal>
  <PropertyVal Name="TextColor">0</PropertyVal>
  <PropertyVal Name="Multiline"></PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="Selectable">False</PropertyVal>
  <PropertyVal Name="Transparent">False</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="Bold">True</PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Super">Label</PropertyVal>
  <ControlIndex>4</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>TextField</ControlClass>
  <ItemName>TextField</ItemName>
  <PropertyVal Name="Name">TextField_Title</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">147</PropertyVal>
  <PropertyVal Name="Top">12</PropertyVal>
  <PropertyVal Name="Width">433</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight"></PropertyVal>
  <PropertyVal Name="LockBottom"></PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">6</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Border">True</PropertyVal>
  <PropertyVal Name="Password"></PropertyVal>
  <PropertyVal Name="UseFocusRing">True</PropertyVal>
  <PropertyVal Name="TextColor">0</PropertyVal>
  <PropertyVal Name="BackColor">16777215</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Format"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="Bold"></PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="CueText"></PropertyVal>
  <PropertyVal Name="Text"></PropertyVal>
  <PropertyVal Name="Mask"></PropertyVal>
  <PropertyVal Name="ReadOnly"></PropertyVal>
  <PropertyVal Name="LimitText">0</PropertyVal>
  <PropertyVal Name="AcceptTabs"></PropertyVal>
  <PropertyVal Name="Alignment">0</PropertyVal>
  <PropertyVal Name="AutomaticallyCheckSpelling">False</PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="Super">TextField</PropertyVal>
  <ControlIndex>5</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>TextField</ControlClass>
  <ItemName>TextField</ItemName>
  <PropertyVal Name="Name">TextField_Description</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">147</PropertyVal>
  <PropertyVal Name="Top">45</PropertyVal>
  <PropertyVal Name="Width">433</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight"></PropertyVal>
  <PropertyVal Name="LockBottom"></PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">7</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Border">True</PropertyVal>
  <PropertyVal Name="Password"></PropertyVal>
  <PropertyVal Name="UseFocusRing">True</PropertyVal>
  <PropertyVal Name="TextColor">0</PropertyVal>
  <PropertyVal Name="BackColor">16777215</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Format"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="Bold"></PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="CueText"></PropertyVal>
  <PropertyVal Name="Text"></PropertyVal>
  <PropertyVal Name="Mask"></PropertyVal>
  <PropertyVal Name="ReadOnly"></PropertyVal>
  <PropertyVal Name="LimitText">0</PropertyVal>
  <PropertyVal Name="AcceptTabs"></PropertyVal>
  <PropertyVal Name="Alignment">0</PropertyVal>
  <PropertyVal Name="AutomaticallyCheckSpelling">False</PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="Super">TextField</PropertyVal>
  <ControlIndex>6</ControlIndex>
  <Locked>0</Locked>
 </Control>
 <Control>
  <ControlClass>SyntaxHighlightEditField</ControlClass>
  <ItemName>SyntaxHighlightEditField</ItemName>
  <PropertyVal Name="HideSelection">True</PropertyVal>
  <PropertyVal Name="AutomaticallyCheckSpelling">True</PropertyVal>
  <PropertyVal Name="Name">TextArea_Transform</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Top">110</PropertyVal>
  <PropertyVal Name="Width">560</PropertyVal>
  <PropertyVal Name="Height">239</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight"></PropertyVal>
  <PropertyVal Name="LockBottom"></PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">8</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Border">True</PropertyVal>
  <PropertyVal Name="Multiline">True</PropertyVal>
  <PropertyVal Name="ScrollbarHorizontal"></PropertyVal>
  <PropertyVal Name="ScrollbarVertical">True</PropertyVal>
  <PropertyVal Name="Styled">True</PropertyVal>
  <PropertyVal Name="UseFocusRing">True</PropertyVal>
  <PropertyVal Name="TextColor">0</PropertyVal>
  <PropertyVal Name="BackColor">16777215</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Format"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="TextFont">Courier</PropertyVal>
  <PropertyVal Name="TextSize">0</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="Bold"></PropertyVal>
  <PropertyVal Name="Italic"></PropertyVal>
  <PropertyVal Name="Underline"></PropertyVal>
  <PropertyVal Name="Text"></PropertyVal>
  <PropertyVal Name="Mask"></PropertyVal>
  <PropertyVal Name="ReadOnly"></PropertyVal>
  <PropertyVal Name="LimitText">0</PropertyVal>
  <PropertyVal Name="AcceptTabs"></PropertyVal>
  <PropertyVal Name="Alignment">0</PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="Super">SyntaxHighlightEditField</PropertyVal>
  <ControlIndex>7</ControlIndex>
  <Locked>0</Locked>
 </Control>
</block>
<block type="Module" ID="102461358">
 <ObjName>SyntaxHighlightEditField</ObjName>
 <ObjContainerID>78201623</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>TextArea</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <HookInstance>
  <ItemName>Close</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Close()</SourceLine>
   <SourceLine>// Kill HighlighterThread if it's running</SourceLine>
   <SourceLine>// and unset its owner</SourceLine>
   <SourceLine>if Highlighter=nil then Return</SourceLine>
   <SourceLine>Highlighter.owner=nil</SourceLine>
   <SourceLine>Highlighter.Kill</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>Open</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Open()</SourceLine>
   <SourceLine>// Define a new HighlighterThread and a </SourceLine>
   <SourceLine>// KeyDownTimer to keep track of its timing</SourceLine>
   <SourceLine>keyListener=new KeyDownTimer(self)</SourceLine>
   <SourceLine>Highlighter=new HighlighterThread(self)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// When any instance of SyntaxHighlightEditField opens,</SourceLine>
   <SourceLine>// set its syntax to be the XML HighlightDefinition</SourceLine>
   <SourceLine>Me.Syntax = App.xmlHighlightDefinition</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>MouseWheel</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MouseWheel(X As Integer, Y As Integer, deltaX as Integer, deltaY as Integer) As Boolean</SourceLine>
   <SourceLine>// When the user scrolls their mouse wheel,</SourceLine>
   <SourceLine>// adjust the position of the window by deltaY</SourceLine>
   <SourceLine>// (shouldn't this be taken care of automatically?)</SourceLine>
   <SourceLine>Me.ScrollPosition = Me.ScrollPosition + deltay</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>TextChange</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TextChange()</SourceLine>
   <SourceLine>// Reset the KeyDownTimer anytime a</SourceLine>
   <SourceLine>// key is pressed, then fire the superclass'</SourceLine>
   <SourceLine>// TextChange() event</SourceLine>
   <SourceLine>keyListener.Reset</SourceLine>
   <SourceLine>TextChange()</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <Method>
  <ItemName>highlight</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub highlight()</SourceLine>
   <SourceLine>// Highlight the contained text and </SourceLine>
   <SourceLine>// keep track of how long it took</SourceLine>
   <SourceLine>if Syntax=nil then Return</SourceLine>
   <SourceLine>dim start as Double=Microseconds</SourceLine>
   <SourceLine>Syntax.highlight(me.Text, me.StyledText)</SourceLine>
   <SourceLine>start=(Microseconds-start)/1000</SourceLine>
   <SourceLine>HighlightingDone(start)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>startThreadedHighlight</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub startThreadedHighlight()</SourceLine>
   <SourceLine>if Highlighter.State=thread.Running then</SourceLine>
   <SourceLine>Highlighter.Kill</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Highlighter.Run</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Hook>
  <ItemName>Open</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>HighlightingDone</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams>milliseconds as integer</ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>TextChange</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Note>
  <ItemName>About</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>About</NoteLine>
   <NoteLine>Info</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>SyntaxHighlightEditField 1.1</NoteLine>
   <NoteLine>By Alex Restrepo</NoteLine>
   <NoteLine>send comments, suggestions, fixes to alexrestrepo@mac.com</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>A little experiment on SyntaxHighlighting</NoteLine>
   <NoteLine>To use just add an instance to your window and set the appropriate syntax. </NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Methods:</NoteLine>
   <NoteLine>Highlight: starts Highlighting the contents of the editfield using the assigned syntax.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>startThreadedHighlight: highlights the contents using a thread.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Properties:</NoteLine>
   <NoteLine>Syntax: gets or sets the syntax used to Highlight the contents of the EditField</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Open source under the creative commons license.</NoteLine>
   <NoteLine>Use in whatever way you like... at your own risk :P</NoteLine>
   <NoteLine>let me know if you find it useful.</NoteLine>
   <NoteLine>If you decide to use it in your projects, please give me credit in your about window or documentation, thanks.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>version history</NoteLine>
   <NoteLine>1.0 initial release</NoteLine>
   <NoteLine>1.1 updated to support non-Standard characters</NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Property>
  <ItemName>_Syntax</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>_Syntax As HighlightDefinition</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>_Syntax As HighlightDefinition</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>Syntax</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Syntax As HighlightDefinition</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Syntax As HighlightDefinition</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>if value=nil then Return</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>_Syntax=value</SourceLine>
   <SourceLine>startThreadedHighlight</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Return _Syntax</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>highlighter</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>highlighter As HighlighterThread</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>highlighter As HighlighterThread</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>keyListener</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>keyListener As KeyDownTimer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>keyListener As KeyDownTimer</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>HideSelection</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>TextArea</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AutomaticallyCheckSpelling</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>boolean</ItemType>
   <InheritsFrom>TextArea</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>Integer</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Width</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>80</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Height</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>22</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LockLeft</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LockTop</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LockRight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LockBottom</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TabPanelIndex</ObjName>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TabIndex</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TabStop</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Border</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Multiline</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ScrollbarHorizontal</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ScrollbarVertical</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Styled</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>UseFocusRing</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TextColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>&amp;h000000</PropertyValue>
   <ItemType>Color</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>BackColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>&amp;hFFFFFF</PropertyValue>
   <ItemType>Color</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Enabled</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Format</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>String</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Visible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>HelpTag</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AutoDeactivate</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TextFont</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Font</PropertyGroup>
   <PropertyValue>System</PropertyValue>
   <ItemType>String</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TextSize</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Font</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Single</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TextUnit</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Font</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <EditorType>Enum</EditorType>
   <InheritsFrom>EditField</InheritsFrom>
   <Enumeration>
    <ItemDef>0 - Default</ItemDef>
    <ItemDef>1 - Pixel</ItemDef>
    <ItemDef>2 - Point</ItemDef>
    <ItemDef>3 - Inch</ItemDef>
    <ItemDef>4 - Millimeter</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Bold</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Font</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Italic</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Font</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Underline</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Font</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Text</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Initial State</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Mask</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ReadOnly</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LimitText</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AcceptTabs</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Alignment</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <EditorType>Enum</EditorType>
   <InheritsFrom>EditField</InheritsFrom>
   <Enumeration>
    <ItemDef>0 - Default</ItemDef>
    <ItemDef>1 - Left</ItemDef>
    <ItemDef>2 - Center</ItemDef>
    <ItemDef>3 - Right</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>DataSource</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Database Binding</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>DataSource</EditorType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>DataField</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Database Binding</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>DataField</EditorType>
   <InheritsFrom>EditField</InheritsFrom>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1695943156">
 <ObjName>KeyDownTimer</ObjName>
 <ObjContainerID>78201623</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>timer</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <HookInstance>
  <ItemName>Action</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Action()</SourceLine>
   <SourceLine>owner.StartThreadedHighlight</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(owner as syntaxHighlightEditField)</SourceLine>
   <SourceLine>self.owner=owner</SourceLine>
   <SourceLine>me.Period=200</SourceLine>
   <SourceLine>me.Mode=Timer.ModeSingle</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>owner as syntaxHighlightEditField</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Reset</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Reset()</SourceLine>
   <SourceLine>me.Mode=Timer.ModeSingle</SourceLine>
   <SourceLine>super.Reset</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>owner</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>owner As SyntaxHighlightEditField</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>owner As SyntaxHighlightEditField</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>timer</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>timer</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>timer</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
   <InheritsFrom>timer</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
   <InheritsFrom>timer</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Mode</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>2</PropertyValue>
   <ItemType>Integer</ItemType>
   <EditorType>Enum</EditorType>
   <InheritsFrom>timer</InheritsFrom>
   <Enumeration>
    <ItemDef>0 - Off</ItemDef>
    <ItemDef>1 - Single</ItemDef>
    <ItemDef>2 - Multiple</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Period</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>1000</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>timer</InheritsFrom>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1144615010">
 <ObjName>HighlighterThread</ObjName>
 <ObjContainerID>78201623</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>Thread</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <HookInstance>
  <ItemName>Run</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Run()</SourceLine>
   <SourceLine>owner.Highlight</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(owner as SyntaxHighlightEditField)</SourceLine>
   <SourceLine>self.owner=owner</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TargetWin32</SourceLine>
   <SourceLine>me.Priority=1</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>me.Priority=2</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>owner as SyntaxHighlightEditField</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>owner</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>owner As SyntaxHighlightEditField</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>owner As SyntaxHighlightEditField</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Thread</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Thread</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Thread</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Thread</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Thread</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Priority</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>5</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Thread</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>StackSize</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Thread</InheritsFrom>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="74422694">
 <ObjName>HighlightDefinition</ObjName>
 <ObjContainerID>78201623</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>addContext</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub addContext(context as HighlightContext)</SourceLine>
   <SourceLine>if Context=nil then Return</SourceLine>
   <SourceLine>contexts.Append(Context)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>context as HighlightContext</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>syntaxRegEx</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function syntaxRegEx() As string</SourceLine>
   <SourceLine>dim tmp as String</SourceLine>
   <SourceLine>dim current as HighlightContext</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//returns the regex pattern for all contexts</SourceLine>
   <SourceLine>tmp="("</SourceLine>
   <SourceLine>for Each current in contexts</SourceLine>
   <SourceLine>tmp=tmp+current.contextRegEx+"|"</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>tmp=Left(tmp,tmp.Len-1)+")"</SourceLine>
   <SourceLine>Return tmp</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>highlight</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub highlight(text as string, style as styledText)</SourceLine>
   <SourceLine>dim match as RegExMatch</SourceLine>
   <SourceLine>dim subExpression as String</SourceLine>
   <SourceLine>dim context as HighlightContext</SourceLine>
   <SourceLine>dim startPos as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//init the regex pattern and perform the initial search</SourceLine>
   <SourceLine>scanner.SearchPattern=syntaxRegEx</SourceLine>
   <SourceLine>match=scanner.Search(Text)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim charPos as Integer</SourceLine>
   <SourceLine>while match&lt;&gt;nil</SourceLine>
   <SourceLine>subExpression=match.SubExpressionString(1)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//find the actual character position within the string, since SubExpressionStartB returns the byte position, </SourceLine>
   <SourceLine>//and if you have multi-byte strings you get an offsetted highlight.</SourceLine>
   <SourceLine>charPos=text.leftb(match.SubExpressionStartB(1)).len</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//Highlight everything up to this point with the default color.</SourceLine>
   <SourceLine>Style.TextColor(startPos, charPos-startPos)=defaultColor</SourceLine>
   <SourceLine>startPos = charPos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//find the context for the match</SourceLine>
   <SourceLine>Context=findContextForMatch(subExpression)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//forward execution to the context for any further processing.</SourceLine>
   <SourceLine>if Context&lt;&gt;nil then</SourceLine>
   <SourceLine>Context.Highlight(text, style, subExpression, startPos, scanner)</SourceLine>
   <SourceLine>startPos=text.leftb(scanner.SearchStartPosition).len</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//and search again</SourceLine>
   <SourceLine>scanner.SearchPattern=syntaxRegEx</SourceLine>
   <SourceLine>match=scanner.Search</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//Highlight the rest of the text with the default color.</SourceLine>
   <SourceLine>Style.TextColor(startPos, text.Len-startPos)=defaultColor</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>text as string, style as styledText</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>findContextForMatch</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function findContextForMatch(expressionMatch as string) As HighlightContext</SourceLine>
   <SourceLine>if UBound(contexts)&lt;0 then Return nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//find the context for the match</SourceLine>
   <SourceLine>dim i as Integer</SourceLine>
   <SourceLine>dim entry as HighlightContext</SourceLine>
   <SourceLine>dim match as RegExMatch</SourceLine>
   <SourceLine>dim scanner as new regex</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for Each entry in contexts</SourceLine>
   <SourceLine>scanner.SearchPattern=entry.contextRegEx</SourceLine>
   <SourceLine>match=scanner.Search(expressionMatch)</SourceLine>
   <SourceLine>if match&lt;&gt;nil then</SourceLine>
   <SourceLine>Return entry</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return nil</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>expressionMatch as string</ItemParams>
  <ItemResult>HighlightContext</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>//init regex scanner</SourceLine>
   <SourceLine>scanner = new regex</SourceLine>
   <SourceLine>scanner.Options.DotMatchAll=true</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>saveAsXml</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function saveAsXml(file as folderItem) As boolean</SourceLine>
   <SourceLine>if file=nil then Return False</SourceLine>
   <SourceLine>Dim xml as XmlDocument</SourceLine>
   <SourceLine>Dim root, node as XMLNode</SourceLine>
   <SourceLine>Dim context as HighlightContext</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//save definition as an xml</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>xml = New XmlDocument</SourceLine>
   <SourceLine>//root</SourceLine>
   <SourceLine>root = xml.AppendChild(xml.CreateElement("highlightDefinition"))</SourceLine>
   <SourceLine>root.SetAttribute("version",format(version,"#.0"))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//name</SourceLine>
   <SourceLine>node = root.AppendChild(xml.CreateElement("name"))</SourceLine>
   <SourceLine>node.AppendChild(xml.CreateTextNode(name))</SourceLine>
   <SourceLine>IndentNode(node,1)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>node = root.AppendChild(xml.CreateElement("contexts"))</SourceLine>
   <SourceLine>dim tmpObj as Variant=defaultColor</SourceLine>
   <SourceLine>node.SetAttribute("defaultColor","#"+Hex(tmpObj.IntegerValue))</SourceLine>
   <SourceLine>node.SetAttribute("caseSensitive",bool2YN(caseSensitive))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//process contexts</SourceLine>
   <SourceLine>for Each Context in contexts</SourceLine>
   <SourceLine>Context.appendToXMLNode(node)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>IndentNode(node,1, true)</SourceLine>
   <SourceLine>IndentNode(root,0, true)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim tos as TextOutputStream=file.CreateTextFile</SourceLine>
   <SourceLine>tos.Write(xml.ToString)</SourceLine>
   <SourceLine>tos.Close</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return true</SourceLine>
   <SourceLine>catch</SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine>end try</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>file as folderItem</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IndentNode</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub IndentNode(node As XmlNode, level As Integer, indentCloseTag As Boolean = False)</SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim s As String</SourceLine>
   <SourceLine>s = EndOfLine</SourceLine>
   <SourceLine>For i = 1 To level</SourceLine>
   <SourceLine>s = s + Chr(9) // Tab</SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine>node.Parent.Insert(node.OwnerDocument.CreateTextNode(s), node)</SourceLine>
   <SourceLine>If indentCloseTag Then</SourceLine>
   <SourceLine>node.AppendChild(node.OwnerDocument.CreateTextNode(s))</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>node As XmlNode, level As Integer, indentCloseTag As Boolean = False</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>loadFromXml</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function loadFromXml(data as string) As boolean</SourceLine>
   <SourceLine>dim xml as XmlDocument</SourceLine>
   <SourceLine>Dim root, node as XMLNode</SourceLine>
   <SourceLine>Dim context as HighlightContext</SourceLine>
   <SourceLine>Dim i, j as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//load a xml syntax definition.</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>xml=new XmlDocument</SourceLine>
   <SourceLine>xml.LoadXml(data)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>root=xml.Child(0)</SourceLine>
   <SourceLine>//doc check</SourceLine>
   <SourceLine>if root.Name&lt;&gt;"highlightDefinition" then Return False</SourceLine>
   <SourceLine>if val(root.GetAttribute("version"))&lt;&gt;version then Return False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i=0 to root.ChildCount-1</SourceLine>
   <SourceLine>node=root.Child(i)</SourceLine>
   <SourceLine>select case node.Name</SourceLine>
   <SourceLine>case "name"</SourceLine>
   <SourceLine>//syntax name</SourceLine>
   <SourceLine>Name=node.FirstChild.Value</SourceLine>
   <SourceLine>case "contexts"</SourceLine>
   <SourceLine>//contexts</SourceLine>
   <SourceLine>dim tmpObj as Variant</SourceLine>
   <SourceLine>tmpObj = "&amp;h" + node.GetAttribute("defaultColor").Mid(1)</SourceLine>
   <SourceLine>defaultColor=tmpObj.ColorValue</SourceLine>
   <SourceLine>caseSensitive=YN2Bool(node.GetAttribute("caseSensitive"))</SourceLine>
   <SourceLine>for j=0 to node.ChildCount-1</SourceLine>
   <SourceLine>Context=new HighlightContext(caseSensitive)</SourceLine>
   <SourceLine>Context.loadFromXmlNode(node.Child(j))</SourceLine>
   <SourceLine>addContext(Context)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return true</SourceLine>
   <SourceLine>Catch</SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine>end try</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>data as string</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>loadFromXml</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function loadFromXml(data as folderItem) As boolean</SourceLine>
   <SourceLine>if data=nil then Return False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//read a file...</SourceLine>
   <SourceLine>dim tis as TextInputStream=data.OpenAsTextFile</SourceLine>
   <SourceLine>if tis=nil then Return False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim xml as String=tis.ReadAll</SourceLine>
   <SourceLine>tis.Close</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return loadFromXml(xml)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>data as folderItem</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>bool2YN</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function bool2YN(value as boolean) As string</SourceLine>
   <SourceLine>if value then Return "yes"</SourceLine>
   <SourceLine>Return "no"</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>value as boolean</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>YN2Bool</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function YN2Bool(value as string) As boolean</SourceLine>
   <SourceLine>if value="yes" then Return true</SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>value as string</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Note>
  <ItemName>About</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>About</NoteLine>
   <NoteLine>Info</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>HighlightDefinition</NoteLine>
   <NoteLine>By Alex Restrepo</NoteLine>
   <NoteLine>send comments, suggestions, fixes to alexrestrepo@mac.com</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>A little experiment on SyntaxHighlighting</NoteLine>
   <NoteLine>Contains the rules of how to Highlight the contents of the EditField.</NoteLine>
   <NoteLine>A definition is composed of one or more HighlightContexts</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Methods:</NoteLine>
   <NoteLine>addContext(context as HighlightContext): adds the HighlightContext to the contexts array</NoteLine>
   <NoteLine>Highlight(text as string, style as styledText): highlights the provided text using the provided syledtext object.</NoteLine>
   <NoteLine>loadFromXml(data as string): loads a HighlightDefinition stored in a xml string</NoteLine>
   <NoteLine>loadFromXml(data as folderItem): loads a HighlightDefinition stored in a xml file</NoteLine>
   <NoteLine>saveAsXml(file as folderitem): saves the HighlightDefinition as an xml file.</NoteLine>
   <NoteLine>&#32;</NoteLine>
   <NoteLine>Properties:</NoteLine>
   <NoteLine>CaseSensitive: gets or sets if the contained syntax is case-sensitive</NoteLine>
   <NoteLine>DefaultColor: gets or sets the default color for the text</NoteLine>
   <NoteLine>Name: the name of the definition (ie: Xml or REALbasic)</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Open source under the creative commons license.</NoteLine>
   <NoteLine>Use in whatever way you like... at your own risk :P</NoteLine>
   <NoteLine>let me know if you find it useful.</NoteLine>
   <NoteLine>If you decide to use it in your projects, please give me credit in your about window or documentation, thanks.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Property>
  <ItemName>Name</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Name As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Name As string</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>_name=value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Return _name</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>_name</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>_name As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>_name As string</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>contexts()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>contexts() As HighlightContext</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>contexts() As HighlightContext</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>scanner</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>scanner As regex</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>scanner As regex</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>_defaultColor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>_defaultColor As color</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>_defaultColor As color</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>_caseSensitive</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>_caseSensitive As boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>_caseSensitive As boolean</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>CaseSensitive</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>CaseSensitive As boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>CaseSensitive As boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>_caseSensitive=value</SourceLine>
   <SourceLine>scanner.Options.CaseSensitive=value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Return _caseSensitive</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>DefaultColor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>DefaultColor As color</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>DefaultColor As color</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>_defaultColor=value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Return _defaultColor</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>string</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>caseSensitive</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>defaultColor</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>&amp;h000000</PropertyValue>
   <ItemType>color</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>version</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>version</ItemName>
  <ItemType>2</ItemType>
  <ItemDef>1.0</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
</block>
<block type="Module" ID="1063843830">
 <ObjName>HighlightContext</ObjName>
 <ObjContainerID>78201623</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>addSubContext</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub addSubContext(entry as HighlightContext)</SourceLine>
   <SourceLine>if entry=nil then Return</SourceLine>
   <SourceLine>subContexts.Append(entry)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>entry as HighlightContext</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>contextRegEx</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function contextRegEx() As string</SourceLine>
   <SourceLine>//return the regex pattern for this context</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//if there's a StartRegEx then the pattern is the StartRegEx, the same goes with the EntryRegEx</SourceLine>
   <SourceLine>if StartRegEx&lt;&gt;"" then Return StartRegEx</SourceLine>
   <SourceLine>if entryRegEx&lt;&gt;"" then Return entryRegEx</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//else, if there's a cached version of the regex, return it.</SourceLine>
   <SourceLine>if _contextRegEx&lt;&gt;"" then Return _contextRegEx</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//finally, build the pattern using the keywords, regexes and subcontexts (these are exclusive)</SourceLine>
   <SourceLine>//check for keywords</SourceLine>
   <SourceLine>dim keyword as String</SourceLine>
   <SourceLine>if UBound(keywords)&gt;-1 then</SourceLine>
   <SourceLine>_contextRegEx="\b("</SourceLine>
   <SourceLine>for Each keyword in keywords</SourceLine>
   <SourceLine>_contextRegEx=_contextRegEx+keyword+"|"</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>_contextRegEx=Left(_contextRegEx,_contextRegEx.Len-1)+")\b"</SourceLine>
   <SourceLine>Return _contextRegEx</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//else, check for regexes</SourceLine>
   <SourceLine>dim aRegEx as String</SourceLine>
   <SourceLine>if UBound(regexes)&gt;-1 then</SourceLine>
   <SourceLine>_contextRegEx="("</SourceLine>
   <SourceLine>for Each aRegEx in regexes</SourceLine>
   <SourceLine>_contextRegEx=_contextRegEx+aRegEx+"|"</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>_contextRegEx=Left(_contextRegEx,_contextRegEx.Len-1)+")"</SourceLine>
   <SourceLine>Return _contextRegEx</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>_contextRegEx=subContextRegEx</SourceLine>
   <SourceLine>if _contextRegEx&lt;&gt;"" then Return _contextRegEx</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>addRegEx</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub addRegEx(newRegEx as string)</SourceLine>
   <SourceLine>if newRegEx="" then Return</SourceLine>
   <SourceLine>regexes.Append(newRegEx)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>newRegEx as string</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>highlight</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub highlight(text as string, style as styledText, subExpression as string, position as integer, scanner as regex)</SourceLine>
   <SourceLine>//Highlight this context</SourceLine>
   <SourceLine>dim match as RegExMatch</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//if there's a start and end regexes we need to find the EndRegEx</SourceLine>
   <SourceLine>if StartRegEx.trim&lt;&gt;"" and EndRegEx&lt;&gt;"" then</SourceLine>
   <SourceLine>//find end...</SourceLine>
   <SourceLine>scanner.SearchPattern=EndRegEx</SourceLine>
   <SourceLine>match=scanner.Search</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//find the subExpression</SourceLine>
   <SourceLine>if match&lt;&gt;nil then</SourceLine>
   <SourceLine>subExpression=LeftB(text, match.SubExpressionStartB(0)+match.SubExpressionString(0).len)</SourceLine>
   <SourceLine>subExpression=Right(subExpression, subExpression.Len-position)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>//no match? then use the rest of the String...</SourceLine>
   <SourceLine>subExpression=Right(text, text.Len-position)</SourceLine>
   <SourceLine>scanner.SearchStartPosition=text.Len</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif EntryRegEx&lt;&gt;"" then</SourceLine>
   <SourceLine>//else check for EntryRegEx</SourceLine>
   <SourceLine>self.scanner.SearchPattern=EntryRegEx</SourceLine>
   <SourceLine>match=self.scanner.Search(subExpression)</SourceLine>
   <SourceLine>if match&lt;&gt;nil then</SourceLine>
   <SourceLine>subExpression=match.SubExpressionString(1)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//Highlight subExpression</SourceLine>
   <SourceLine>Style.TextColor(position, subExpression.Len)=HighlightColor</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim entry as HighlightContext</SourceLine>
   <SourceLine>dim substring as String</SourceLine>
   <SourceLine>dim start as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//scan subcontexts</SourceLine>
   <SourceLine>substring=subContextRegEx</SourceLine>
   <SourceLine>if substring&lt;&gt;"" then</SourceLine>
   <SourceLine>self.scanner.SearchPattern=substring</SourceLine>
   <SourceLine>match=self.scanner.Search(subExpression)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while match&lt;&gt;nil</SourceLine>
   <SourceLine>substring=match.SubExpressionString(1)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>start=subExpression.leftb(match.SubExpressionStartB(1)).len</SourceLine>
   <SourceLine>entry=findSubContextForMatch(substring, subExpression, start)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//forward execution to subcontext... </SourceLine>
   <SourceLine>if entry&lt;&gt;nil then</SourceLine>
   <SourceLine>entry.Highlight(subExpression, style, substring, position+start, self.scanner) </SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>match=self.scanner.Search</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>text as string, style as styledText, subExpression as string, position as integer, scanner as regex</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(caseSensitive as boolean)</SourceLine>
   <SourceLine>//init regex scanner</SourceLine>
   <SourceLine>scanner=new RegEx</SourceLine>
   <SourceLine>scanner.Options.DotMatchAll=true</SourceLine>
   <SourceLine>scanner.Options.CaseSensitive=caseSensitive</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>caseSensitive as boolean</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>subContextRegEx</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function subContextRegEx() As string</SourceLine>
   <SourceLine>if _subContextRegEx&lt;&gt;"" then Return _subContextRegEx</SourceLine>
   <SourceLine>dim current as HighlightContext</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//get the regex for the subContexts</SourceLine>
   <SourceLine>if UBound(subContexts)&gt;-1 then</SourceLine>
   <SourceLine>_subContextRegEx="("</SourceLine>
   <SourceLine>for Each current in subContexts</SourceLine>
   <SourceLine>_subContextRegEx=_subContextRegEx+current.contextRegEx+"|"</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>_subContextRegEx=Left(_subContextRegEx,_subContextRegEx.Len-1)+")"</SourceLine>
   <SourceLine>Return _subContextRegEx</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>findSubContextForMatch</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function findSubContextForMatch(expressionMatch as string, context as string, pos as integer) As HighlightContext</SourceLine>
   <SourceLine>if UBound(subContexts)&lt;0 then Return nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//find the subContext that matches the subexpression in the given search context.</SourceLine>
   <SourceLine>dim i as Integer</SourceLine>
   <SourceLine>dim entry as HighlightContext</SourceLine>
   <SourceLine>dim match as RegExMatch</SourceLine>
   <SourceLine>dim scanner as new regex</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for Each entry in subContexts</SourceLine>
   <SourceLine>scanner.SearchPattern=entry.contextRegEx</SourceLine>
   <SourceLine>match=scanner.Search(context,pos)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if match&lt;&gt;nil and match.SubExpressionString(0)=expressionMatch then</SourceLine>
   <SourceLine>Return entry</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return nil</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>expressionMatch as string, context as string, pos as integer</ItemParams>
  <ItemResult>HighlightContext</ItemResult>
 </Method>
 <Method>
  <ItemName>appendToXMLNode</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub appendToXMLNode(parent as xmlNode, depth as integer = 2)</SourceLine>
   <SourceLine>//appends this context to the parent xml node</SourceLine>
   <SourceLine>//this is done to export the syntax definition as an xml file.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim xdoc as XmlDocument</SourceLine>
   <SourceLine>dim node, context as XmlNode</SourceLine>
   <SourceLine>dim tmpObj as Variant</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>xdoc = parent.OwnerDocument</SourceLine>
   <SourceLine>context=parent.AppendChild(xdoc.CreateElement("highlightContext"))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//name</SourceLine>
   <SourceLine>context.SetAttribute("name",Name)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//HighlightColor</SourceLine>
   <SourceLine>tmpObj=HighlightColor</SourceLine>
   <SourceLine>context.SetAttribute("highlightColor","#"+Hex(tmpObj.IntegerValue))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//start regex?</SourceLine>
   <SourceLine>if StartRegEx&lt;&gt;"" then</SourceLine>
   <SourceLine>node=context.AppendChild(xdoc.CreateElement("startRegEx"))</SourceLine>
   <SourceLine>node.AppendChild(xdoc.CreateTextNode(StartRegEx))</SourceLine>
   <SourceLine>IndentNode(node,depth+1)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//end regex?</SourceLine>
   <SourceLine>if EndRegEx&lt;&gt;"" then</SourceLine>
   <SourceLine>node=context.AppendChild(xdoc.CreateElement("endRegEx"))</SourceLine>
   <SourceLine>node.AppendChild(xdoc.CreateTextNode(EndRegEx))</SourceLine>
   <SourceLine>IndentNode(node,depth+1)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//entry regex?</SourceLine>
   <SourceLine>if EntryRegEx&lt;&gt;"" then</SourceLine>
   <SourceLine>node=context.AppendChild(xdoc.CreateElement("entryRegEx"))</SourceLine>
   <SourceLine>node.AppendChild(xdoc.CreateTextNode(EntryRegEx))</SourceLine>
   <SourceLine>IndentNode(node,depth+1)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//keywords</SourceLine>
   <SourceLine>if UBound(keywords)&gt;-1 then</SourceLine>
   <SourceLine>node=context.AppendChild(xdoc.CreateElement("keywords"))</SourceLine>
   <SourceLine>dim tmp as String</SourceLine>
   <SourceLine>dim kw as XmlNode</SourceLine>
   <SourceLine>for each tmp in keywords</SourceLine>
   <SourceLine>kw=node.AppendChild(xdoc.CreateElement("string"))</SourceLine>
   <SourceLine>kw.AppendChild(xdoc.CreateTextNode(tmp))</SourceLine>
   <SourceLine>IndentNode(kw,depth+2)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>IndentNode(node,depth+1,true)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//regexes</SourceLine>
   <SourceLine>if UBound(regexes)&gt;-1 then</SourceLine>
   <SourceLine>node=context.AppendChild(xdoc.CreateElement("regExes"))</SourceLine>
   <SourceLine>dim tmp as String</SourceLine>
   <SourceLine>dim kw as XmlNode</SourceLine>
   <SourceLine>for each tmp in keywords</SourceLine>
   <SourceLine>kw=node.AppendChild(xdoc.CreateElement("string"))</SourceLine>
   <SourceLine>kw.AppendChild(xdoc.CreateTextNode(tmp))</SourceLine>
   <SourceLine>IndentNode(kw,depth+2)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>IndentNode(node,depth+1,true)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//finally, subcontexs, if any</SourceLine>
   <SourceLine>dim subContext as HighlightContext</SourceLine>
   <SourceLine>for each subContext in subContexts</SourceLine>
   <SourceLine>subContext.appendToXMLNode(context,depth+1)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>IndentNode(Context,depth, true)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>parent as xmlNode, depth as integer = 2</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>IndentNode</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub IndentNode(node As XmlNode, level As Integer, indentCloseTag As Boolean = False)</SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim s As String</SourceLine>
   <SourceLine>s = EndOfLine</SourceLine>
   <SourceLine>For i = 1 To level</SourceLine>
   <SourceLine>s = s + Chr(9) // Tab</SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine>node.Parent.Insert(node.OwnerDocument.CreateTextNode(s), node)</SourceLine>
   <SourceLine>If indentCloseTag Then</SourceLine>
   <SourceLine>node.AppendChild(node.OwnerDocument.CreateTextNode(s))</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>node As XmlNode, level As Integer, indentCloseTag As Boolean = False</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>addKeyword</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub addKeyword(keyword as string)</SourceLine>
   <SourceLine>if keyword="" then Return</SourceLine>
   <SourceLine>keywords.Append(keyword)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>keyword as string</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>loadFromXmlNode</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub loadFromXmlNode(node as xmlNode)</SourceLine>
   <SourceLine>//load context out of an xml node</SourceLine>
   <SourceLine>dim tmpObj as Variant</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//Highlight color</SourceLine>
   <SourceLine>Name=node.GetAttribute("name")</SourceLine>
   <SourceLine>tmpObj = "&amp;h" + node.GetAttribute("highlightColor").Mid(1)</SourceLine>
   <SourceLine>HighlightColor = tmpObj.ColorValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim i, j as Integer</SourceLine>
   <SourceLine>dim subNode as XmlNode</SourceLine>
   <SourceLine>dim subContext as HighlightContext</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i=0 to node.ChildCount-1</SourceLine>
   <SourceLine>subNode=node.Child(i)</SourceLine>
   <SourceLine>select case subNode.Name</SourceLine>
   <SourceLine>case "startRegEx"</SourceLine>
   <SourceLine>StartRegEx=subNode.FirstChild.Value</SourceLine>
   <SourceLine>case "endRegEx"</SourceLine>
   <SourceLine>EndRegEx=subNode.FirstChild.Value</SourceLine>
   <SourceLine>case "entryRegEx"</SourceLine>
   <SourceLine>EntryRegEx=subNode.FirstChild.Value</SourceLine>
   <SourceLine>case "keywords"</SourceLine>
   <SourceLine>for j=0 to subNode.ChildCount-1</SourceLine>
   <SourceLine>addKeyword(subNode.Child(j).FirstChild.Value)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>case "regExes"</SourceLine>
   <SourceLine>for j=0 to subNode.ChildCount-1</SourceLine>
   <SourceLine>addRegEx(subNode.Child(j).FirstChild.Value)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>case "highlightContext"</SourceLine>
   <SourceLine>subContext=new HighlightContext(scanner.Options.CaseSensitive)</SourceLine>
   <SourceLine>subContext.loadFromXmlNode(subNode)</SourceLine>
   <SourceLine>addSubContext(subContext)</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>node as xmlNode</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Note>
  <ItemName>About</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>About</NoteLine>
   <NoteLine>Info</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>HighlightContext</NoteLine>
   <NoteLine>By Alex Restrepo</NoteLine>
   <NoteLine>send comments, suggestions, fixes to alexrestrepo@mac.com</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>A little experiment on SyntaxHighlighting</NoteLine>
   <NoteLine>Contains the rules of how to Highlight a Context within a HighlightDefinition</NoteLine>
   <NoteLine>A context is composed of ONE of the following:</NoteLine>
   <NoteLine>- a start and end regexes, everything inside the start and end regexes is part of the context, this is a full match regex (subexpression 0)</NoteLine>
   <NoteLine>- an EntryRegEx, specifies the regular expression to match the whole context (ie: an html tag), the first subexpression of the expression is used (subexpression 1)</NoteLine>
   <NoteLine>- keywords, one or more keywords that need to be Highlighted, you can have multiple keyword contexts with different highlight colors. (array of strings)</NoteLine>
   <NoteLine>- regexes, one or more regular expressions that define variations of the same context (ie: in java #include or #package), subexpression 1 is used for each entry.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Methods:</NoteLine>
   <NoteLine>addKeyword(keyword as String): adds the keyword to the keywords array</NoteLine>
   <NoteLine>addRegEx(newRegEx as String): adds the newRegEx to the regexes array</NoteLine>
   <NoteLine>addSubContext(context as HighlightContext): adds the context as a subcontext of this one, for example: properties within xml tags</NoteLine>
   <NoteLine>appendToXMLNode(parent as xmlNode, depth as integer = 2): appends this context to the parent xml node as an xml node, this is done when exporting the parent definition as an xml.</NoteLine>
   <NoteLine>Constructor(caseSensitive as Boolean): the constructor sets the case sensitiviness of the context.</NoteLine>
   <NoteLine>contextRegEx as string: returns the composed regular expression with all the contents of the context, if the context has StartRegEx and EndRegEx, the contextRegEx is the StartRegEx</NoteLine>
   <NoteLine>Highlight(text as string, style as styledText, subExpression as string, position as integer, scanner as regex): Highlights the subexpression, text is the text of the parent context, position is the position of the first character of the subexpression in the context.</NoteLine>
   <NoteLine>loadFromXmlNode(node as XmlNode): loads the context from the xmlNode.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Properties:</NoteLine>
   <NoteLine>StartRegEx: the regular expression that defines the start of the context (ie: in java, /* for multiline comments)</NoteLine>
   <NoteLine>EndRegEx: the regular expression that marks the end of the context (ie: */)</NoteLine>
   <NoteLine>EntryRegEx: the regular expression that defines the context, ie: an xml tag: (&lt;[^&gt;]*&gt;)</NoteLine>
   <NoteLine>HighlightColor: the HighlightColor for the context</NoteLine>
   <NoteLine>Name: the name of the Context, ie: "Tags"</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Open source under the creative commons license.</NoteLine>
   <NoteLine>Use in whatever way you like... at your own risk :P</NoteLine>
   <NoteLine>let me know if you find it useful.</NoteLine>
   <NoteLine>If you decide to use it in your projects, please give me credit in your about window or documentation, thanks.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Property>
  <ItemName>Name</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Name As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Name As string</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>_name=value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Return _name</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>HighlightColor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>HighlightColor As color</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>HighlightColor As color</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>_color=value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Return _color</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>_color</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>_color As color</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>_color As color = &amp;c000000</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>_name</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>_name As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>_name As string</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>subContexts()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>subContexts() As HighlightContext</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>subContexts() As HighlightContext</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>_startRegex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>_startRegex As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>_startRegex As string</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>_endRegex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>_endRegex As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>_endRegex As string</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>StartRegEx</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>StartRegEx As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>StartRegEx As string</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>_startregex=value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Return _startregex</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>EndRegEx</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>EndRegEx As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>EndRegEx As string</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>_endregex=value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return _endregex</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>keywords()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>keywords() As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>keywords() As string</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>regexes()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>regexes() As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>regexes() As string</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>EntryRegEx</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>EntryRegEx As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>EntryRegEx As string</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>_entryRegEx=value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Return _entryRegEx</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>_entryRegEx</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>_entryRegEx As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>_entryRegEx As string</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>scanner</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>scanner As regex</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>scanner As regex</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>_subContextRegEx</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>_subContextRegEx As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>_subContextRegEx As string</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <Property>
  <ItemName>_contextRegEx</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>_contextRegEx As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>_contextRegEx As string</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>string</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>HighlightColor</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>&amp;h000000</PropertyValue>
   <ItemType>color</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>StartRegEx</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>string</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>EndRegEx</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>string</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>entryRegEx</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>string</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Folder" ID="352676896">
 <ObjName>Toolbars</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="Toolbar" ID="74702603">
 <ObjName>MainToolbar</ObjName>
 <ObjContainerID>352676896</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>Toolbar</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
   <InheritsFrom>Toolbar</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Toolbar</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Toolbar</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Toolbar</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Toolbar</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Width</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>100</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Toolbar</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Height</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>32</PropertyValue>
   <ItemType>Integer</ItemType>
   <InheritsFrom>Toolbar</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Visible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Toolbar</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Enabled</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <InheritsFrom>Toolbar</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>InitialParent</ObjName>
   <InheritsFrom>Toolbar</InheritsFrom>
  </ViewProperty>
 </ViewBehavior>
 <ToolItem>
  <Superclass>ToolButton</Superclass>
  <ItemName>OpenXml</ItemName>
  <ItemText>Open XML</ItemText>
  <ItemHelp></ItemHelp>
  <ItemStyle>0</ItemStyle>
  <Enabled>1</Enabled>
  <ItemFlags>0</ItemFlags>
  <Icon>1396215579</Icon>
 </ToolItem>
 <ToolItem>
  <Superclass>ToolButton</Superclass>
  <ItemName>OpenXslt</ItemName>
  <ItemText>Open XSLT</ItemText>
  <ItemHelp></ItemHelp>
  <ItemStyle>0</ItemStyle>
  <Enabled>1</Enabled>
  <ItemFlags>0</ItemFlags>
  <Icon>641442290</Icon>
 </ToolItem>
 <ToolItem>
  <Superclass>ToolButton</Superclass>
  <ItemName>ToolItem1</ItemName>
  <ItemText>Untitled</ItemText>
  <ItemHelp></ItemHelp>
  <ItemStyle>5</ItemStyle>
  <Enabled>1</Enabled>
  <ItemFlags>0</ItemFlags>
 </ToolItem>
 <ToolItem>
  <Superclass>ToolButton</Superclass>
  <ItemName>SaveXml</ItemName>
  <ItemText>Save XML</ItemText>
  <ItemHelp></ItemHelp>
  <ItemStyle>0</ItemStyle>
  <Enabled>0</Enabled>
  <ItemFlags>0</ItemFlags>
  <Icon>2062819666</Icon>
 </ToolItem>
 <ToolItem>
  <Superclass>ToolButton</Superclass>
  <ItemName>SaveXslt</ItemName>
  <ItemText>Save XSLT</ItemText>
  <ItemHelp></ItemHelp>
  <ItemStyle>0</ItemStyle>
  <Enabled>0</Enabled>
  <ItemFlags>0</ItemFlags>
  <Icon>834146100</Icon>
 </ToolItem>
 <ToolItem>
  <Superclass>ToolButton</Superclass>
  <ItemName>SaveOutput</ItemName>
  <ItemText>Save Output</ItemText>
  <ItemHelp></ItemHelp>
  <ItemStyle>0</ItemStyle>
  <Enabled>0</Enabled>
  <ItemFlags>0</ItemFlags>
  <Icon>48644867</Icon>
 </ToolItem>
 <ToolItem>
  <Superclass>ToolButton</Superclass>
  <ItemName>ToolItem2</ItemName>
  <ItemText>Untitled</ItemText>
  <ItemHelp></ItemHelp>
  <ItemStyle>5</ItemStyle>
  <Enabled>1</Enabled>
  <ItemFlags>0</ItemFlags>
 </ToolItem>
 <ToolItem>
  <Superclass>ToolButton</Superclass>
  <ItemName>Transform</ItemName>
  <ItemText>Transform</ItemText>
  <ItemHelp></ItemHelp>
  <ItemStyle>0</ItemStyle>
  <Enabled>0</Enabled>
  <ItemFlags>0</ItemFlags>
  <Icon>720271890</Icon>
 </ToolItem>
 <ToolItem>
  <Superclass>ToolButton</Superclass>
  <ItemName>ToolItem3</ItemName>
  <ItemText>Untitled</ItemText>
  <ItemHelp></ItemHelp>
  <ItemStyle>5</ItemStyle>
  <Enabled>1</Enabled>
  <ItemFlags>0</ItemFlags>
 </ToolItem>
 <ToolItem>
  <Superclass>ToolButton</Superclass>
  <ItemName>TidyXml</ItemName>
  <ItemText>TIDY XML</ItemText>
  <ItemHelp></ItemHelp>
  <ItemStyle>0</ItemStyle>
  <Enabled>0</Enabled>
  <ItemFlags>0</ItemFlags>
  <Icon>1530510615</Icon>
 </ToolItem>
 <ToolItem>
  <Superclass>ToolButton</Superclass>
  <ItemName>TidyXsl</ItemName>
  <ItemText>TIDY XSL</ItemText>
  <ItemHelp></ItemHelp>
  <ItemStyle>0</ItemStyle>
  <Enabled>0</Enabled>
  <ItemFlags>0</ItemFlags>
  <Icon>732799345</Icon>
 </ToolItem>
 <ToolItem>
  <Superclass>ToolButton</Superclass>
  <ItemName>TidyOutput</ItemName>
  <ItemText>TIDY Output</ItemText>
  <ItemHelp></ItemHelp>
  <ItemStyle>0</ItemStyle>
  <Enabled>0</Enabled>
  <ItemFlags>0</ItemFlags>
  <Icon>339892676</Icon>
 </ToolItem>
</block>
<block type="Folder" ID="385742158">
 <ObjName>Images</ObjName>
 <ObjContainerID>352676896</ObjContainerID>
</block>
<block type="Picture" ID="641442290">
 <ObjName>Icon_OpenXSL</ObjName>
 <ObjContainerID>385742158</ObjContainerID>
 <FullPath>Macintosh HD:Users:abach:Git:aXel:Resources:Icons:Icon_OpenXSL.png</FullPath>
 <PartialPath>Resources\Icons\Icon_OpenXSL.png</PartialPath>
 <FileAlias><Hex bytesex></FileAlias>
 <FileAlias><Hex bytesex></FileAlias>
 <ItemText>Icon_OpenXSL</ItemText>
 <ItemTransparent>0</ItemTransparent>
</block>
<block type="Picture" ID="1396215579">
 <ObjName>Icon_OpenXML</ObjName>
 <ObjContainerID>385742158</ObjContainerID>
 <FullPath>Macintosh HD:Users:abach:Git:aXel:Resources:Icons:Icon_OpenXML.png</FullPath>
 <PartialPath>Resources\Icons\Icon_OpenXML.png</PartialPath>
 <FileAlias><Hex bytes="448">00F1D17301020100000001AE0000000001AE000200000C4D6163696E746F7368204844000000000000000000000000000000CA40958C482B000000F7C92B1049636F6E5F4F70656E584D4C2E706E67000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000F9310ECB7543FF0000000000000000FFFFFFFF000009200000000000000000000000000000000549636F6E7300001000080000CA40E9EC0000001100080000CB75A66F00000001001800F7C92B00F768F700F0A3B0000B0790000502330000BEEC000200484D6163696E746F73682048443A55736572733A0061626163683A004769743A006158656C3A005265736F75726365733A0049636F6E733A0049636F6E5F4F70656E584D4C2E706E67000E0022001000490063006F006E005F004F00700065006E0058004D004C002E0070006E0067000F001A000C004D006100630069006E0074006F007300680020004800440012003555736572732F61626163682F4769742F6158656C2F5265736F75726365732F49636F6E732F49636F6E5F4F70656E584D4C2E706E6700001300012F0000150002000CFFFF0000000000000000</Hex></FileAlias>
 <FileAlias><Hex bytesex></FileAlias>
 <ItemText>Icon_OpenXML</ItemText>
 <ItemTransparent>0</ItemTransparent>
</block>
<block type="Picture" ID="834146100">
 <ObjName>Icon_SaveXSL</ObjName>
 <ObjContainerID>385742158</ObjContainerID>
 <FullPath>Macintosh HD:Users:abach:Git:aXel:Resources:Icons:Icon_SaveXSL.png</FullPath>
 <PartialPath>Resources\Icons\Icon_SaveXSL.png</PartialPath>
 <FileAlias><Hex bytesex></FileAlias>
 <FileAlias><Hex bytesex></FileAlias>
 <ItemText>Icon_SaveXSL</ItemText>
 <ItemTransparent>0</ItemTransparent>
</block>
<block type="Picture" ID="2062819666">
 <ObjName>Icon_SaveXML</ObjName>
 <ObjContainerID>385742158</ObjContainerID>
 <FullPath>Macintosh HD:Users:abach:Git:aXel:Resources:Icons:Icon_SaveXML.png</FullPath>
 <PartialPath>Resources\Icons\Icon_SaveXML.png</PartialPath>
 <FileAlias><Hex bytesex></FileAlias>
 <FileAlias><Hex bytes="448">00F1D17301020100000001AE0000000001AE000200000C4D6163696E746F7368204844000000000000000000000000000000CA40958C482B000000F7C92B1049636F6E5F53617665584D4C2E706E67000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000F93105CB7543ED0000000000000000FFFFFFFF000009200000000000000000000000000000000549636F6E7300001000080000CA40E9EC0000001100080000CB75A65D00000001001800F7C92B00F768F700F0A3B0000B0790000502330000BEEC000200484D6163696E746F73682048443A55736572733A0061626163683A004769743A006158656C3A005265736F75726365733A0049636F6E733A0049636F6E5F53617665584D4C2E706E67000E0022001000490063006F006E005F00530061007600650058004D004C002E0070006E0067000F001A000C004D006100630069006E0074006F007300680020004800440012003555736572732F61626163682F4769742F6158656C2F5265736F75726365732F49636F6E732F49636F6E5F53617665584D4C2E706E6700001300012F0000150002000CFFFF0000000000000000</Hex></FileAlias>
 <ItemText>Icon_SaveXML</ItemText>
 <ItemTransparent>0</ItemTransparent>
</block>
<block type="Picture" ID="720271890">
 <ObjName>Icon_Transform</ObjName>
 <ObjContainerID>385742158</ObjContainerID>
 <FullPath>Macintosh HD:Users:abach:Git:aXel:Resources:Icons:Icon_Transform.png</FullPath>
 <PartialPath>Resources\Icons\Icon_Transform.png</PartialPath>
 <FileAlias><Hex bytesex></FileAlias>
 <FileAlias><Hex bytes="456">00F1D17301020100000001B60000000001B6000200000C4D6163696E746F7368204844000000000000000000000000000000CA40958C482B000000F7C92B1249636F6E5F5472616E73666F726D2E706E6700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000F93074CB75439C0000000000000000FFFFFFFF000009200000000000000000000000000000000549636F6E7300001000080000CA40E9EC0000001100080000CB75A60C00000001001800F7C92B00F768F700F0A3B0000B0790000502330000BEEC0002004A4D6163696E746F73682048443A55736572733A0061626163683A004769743A006158656C3A005265736F75726365733A0049636F6E733A0049636F6E5F5472616E73666F726D2E706E67000E0026001200490063006F006E005F005400720061006E00730066006F0072006D002E0070006E0067000F001A000C004D006100630069006E0074006F007300680020004800440012003755736572732F61626163682F4769742F6158656C2F5265736F75726365732F49636F6E732F49636F6E5F5472616E73666F726D2E706E6700001300012F0000150002000CFFFF0000000000000000</Hex></FileAlias>
 <ItemText>Icon_Transform</ItemText>
 <ItemTransparent>0</ItemTransparent>
</block>
<block type="Picture" ID="48644867">
 <ObjName>Icon_SaveOutput</ObjName>
 <ObjContainerID>385742158</ObjContainerID>
 <FullPath>Macintosh HD:Users:abach:Git:aXel:Resources:Icons:Icon_SaveOutput.png</FullPath>
 <PartialPath>Resources\Icons\Icon_SaveOutput.png</PartialPath>
 <FileAlias><Hex bytesex></FileAlias>
 <FileAlias><Hex bytesex></FileAlias>
 <ItemText>Icon_SaveOutput</ItemText>
 <ItemTransparent>0</ItemTransparent>
</block>
<block type="Picture" ID="1530510615">
 <ObjName>Icon_TidyXml</ObjName>
 <ObjContainerID>385742158</ObjContainerID>
 <FullPath>Macintosh HD:Users:abach:Git:aXel:Resources:Icons:Icon_TidyXml.png</FullPath>
 <PartialPath>Resources\Icons\Icon_TidyXml.png</PartialPath>
 <FileAlias><Hex bytesex></FileAlias>
 <FileAlias><Hex bytesex></FileAlias>
 <ItemText>Icon_TidyXml</ItemText>
 <ItemTransparent>0</ItemTransparent>
</block>
<block type="Picture" ID="732799345">
 <ObjName>Icon_TidyXsl</ObjName>
 <ObjContainerID>385742158</ObjContainerID>
 <FullPath>Macintosh HD:Users:abach:Git:aXel:Resources:Icons:Icon_TidyXsl.png</FullPath>
 <PartialPath>Resources\Icons\Icon_TidyXsl.png</PartialPath>
 <FileAlias><Hex bytesex></FileAlias>
 <FileAlias><Hex bytesex></FileAlias>
 <ItemText>Icon_TidyXsl</ItemText>
 <ItemTransparent>0</ItemTransparent>
</block>
<block type="Picture" ID="339892676">
 <ObjName>Icon_TidyOut</ObjName>
 <ObjContainerID>385742158</ObjContainerID>
 <FullPath>Macintosh HD:Users:abach:Git:aXel:Resources:Icons:Icon_TidyOut.png</FullPath>
 <PartialPath>Resources\Icons\Icon_TidyOut.png</PartialPath>
 <FileAlias><Hex bytesex></FileAlias>
 <FileAlias><Hex bytesex></FileAlias>
 <ItemText>Icon_TidyOut</ItemText>
 <ItemTransparent>0</ItemTransparent>
</block>
<block type="Folder" ID="223830211">
 <ObjName>Modules</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="Module" ID="256198520">
 <ObjName>XmlData</ObjName>
 <ObjContainerID>223830211</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>SaveXmlToFile</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SaveXMLToFile(xml As String, defaultFileName As String)</SourceLine>
   <SourceLine>// function: SaveXMLToFile</SourceLine>
   <SourceLine>// parameters: xml As String, defaultFileName As String</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Takes an XML string and saves it to a file (chosen by user)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim folder As FolderItem</SourceLine>
   <SourceLine>Dim xmlDocument As XmlDocument</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If xml &lt;&gt; "" Then</SourceLine>
   <SourceLine>// Allow the user to choose a save location</SourceLine>
   <SourceLine>folder = GetSaveFolderItem(FileTypes_XmlFiletypes.TextXml, defaultFilename)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// If a valid location is chosen, save the XML document to it</SourceLine>
   <SourceLine>If folder &lt;&gt; Nil Then</SourceLine>
   <SourceLine>xmlDocument = New XmlDocument</SourceLine>
   <SourceLine>xmlDocument.LoadXml(xml)</SourceLine>
   <SourceLine>xmlDocument.SaveXml(folder)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>App.DisplayWarningMsg("No data to save." + EndOfLine + EndOfLine + "Cannot save a blank file.")</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>xml As String, defaultFileName As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TransformXml</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function TransformXml(xml As String, xslt As String, rootNode As String = "") As String</SourceLine>
   <SourceLine>// function: TransformXML</SourceLine>
   <SourceLine>// parameters: xml As String, xslt As String</SourceLine>
   <SourceLine>// return: String</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Create a new XML document, load the sourced XML into it,</SourceLine>
   <SourceLine>// and run the provided XSLT against it</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Define a new XmlDocument</SourceLine>
   <SourceLine>Dim xmlDoc As XmlDocument = New XmlDocument</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Only execute logic if there is non-empty XML and XSL</SourceLine>
   <SourceLine>If xml &lt;&gt; "" And xslt &lt;&gt; "" Then</SourceLine>
   <SourceLine>Try</SourceLine>
   <SourceLine>If rootNode &lt;&gt; "" Then</SourceLine>
   <SourceLine>xmlDoc.LoadXml("&lt;" + rootNode + "&gt;" + xml + "&lt;/" + rootNode + "&gt;")</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>xmlDoc.LoadXml(xml)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Try</SourceLine>
   <SourceLine>// If everything is valid, run the transformation</SourceLine>
   <SourceLine>Return xmlDoc.Transform(xslt)</SourceLine>
   <SourceLine>Catch err As XmlException</SourceLine>
   <SourceLine>App.DisplayWarningMsg("1. There was an error while transforming the data." + EndOfLine + EndOfLine + err.Message)</SourceLine>
   <SourceLine>End Try</SourceLine>
   <SourceLine>Catch err As XmlException</SourceLine>
   <SourceLine>App.DisplayWarningMsg("2. There was an error while transforming the data." + EndOfLine + EndOfLine + err.Message)</SourceLine>
   <SourceLine>End Try</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>App.DisplayWarningMsg("Not enough data to transform." + EndOfLine + EndOfLine + "Please ensure you have valid XML and XSL before running the Transform operation.")</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>xml As String, xslt As String, rootNode As String = ""</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>AnalyzeXpath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function AnalyzeXpath(sourceXml As String, xPath As String) As String</SourceLine>
   <SourceLine>// function: AnalyzeXpath</SourceLine>
   <SourceLine>// parameters: sourceXml As String, xPath As String</SourceLine>
   <SourceLine>// return: none</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Runs the provided XPath against the provided XML</SourceLine>
   <SourceLine>// and returns the XmlNodeList that results</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Try</SourceLine>
   <SourceLine>Dim xmlDocument As XmlDocument = New XmlDocument</SourceLine>
   <SourceLine>Dim xPathResults As XmlNodeList</SourceLine>
   <SourceLine>Dim results As String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>xmlDocument.LoadXml(sourceXml)</SourceLine>
   <SourceLine>xPathResults = xmlDocument.Xql(xPath)</SourceLine>
   <SourceLine>Return TransformXml(xPathResults.ToString, XSLT_TIDY_NO_DECLARATION, "XPATH_RESULTS")</SourceLine>
   <SourceLine>Catch err As XmlException</SourceLine>
   <SourceLine>App.DisplayWarningMsg("There was an error during analysis." + EndOfLine + EndOfLine + err.Message)</SourceLine>
   <SourceLine>End Try</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>sourceXml As String, xPath As String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>TidyXml</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function TidyXml(xml As String, xmlDeclaration As Boolean = True) As String</SourceLine>
   <SourceLine>// function: TidyXML</SourceLine>
   <SourceLine>// parameters: xml As String</SourceLine>
   <SourceLine>// return: String</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Create a new XML document, load it with the passed XML string, and</SourceLine>
   <SourceLine>// run the Identity Template against it (with indenting enabled)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim xmlDoc As XmlDocument = New XmlDocument</SourceLine>
   <SourceLine>Try</SourceLine>
   <SourceLine>xmlDoc.LoadXml(xml)</SourceLine>
   <SourceLine>If Not xmlDeclaration Then</SourceLine>
   <SourceLine>Return xmlDoc.Transform(XSLT_TIDY_NO_DECLARATION)</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Return xmlDoc.Transform(XSLT_TIDY_DECLARATION)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Catch err As XmlException</SourceLine>
   <SourceLine>App.DisplayWarningMsg("There was an error while TIDYing:" + EndOfLine + EndOfLine + err.Message)</SourceLine>
   <SourceLine>Return xml</SourceLine>
   <SourceLine>End Try</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>xml As String, xmlDeclaration As Boolean = True</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>XSLT_TIDY_DECLARATION</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>XSLT_TIDY_DECLARATION</ItemName>
  <ItemType>0</ItemType>
  <ItemDef>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:transform version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;&lt;xsl:output omit-xml-declaration="no" indent="yes"/&gt;&lt;xsl:strip-space elements="*"/&gt;&lt;xsl:template match="node()|@*"&gt;&lt;xsl:copy&gt;&lt;xsl:apply-templates select="node()|@*" /&gt;&lt;/xsl:copy&gt;&lt;/xsl:template&gt;&lt;/xsl:transform&gt;</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>XSLT_TIDY_NO_DECLARATION</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>XSLT_TIDY_NO_DECLARATION</ItemName>
  <ItemType>0</ItemType>
  <ItemDef>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xsl:transform version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;&lt;xsl:output omit-xml-declaration="yes" indent="yes"/&gt;&lt;xsl:strip-space elements="*"/&gt;&lt;xsl:template match="node()|@*"&gt;&lt;xsl:copy&gt;&lt;xsl:apply-templates select="node()|@*" /&gt;&lt;/xsl:copy&gt;&lt;/xsl:template&gt;&lt;/xsl:transform&gt;</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
</block>
<block type="UIState" ID="0">
 <WindowState>
  <OpenTab>
   <ObjContainerID>0</ObjContainerID>
   <EditSplit>199</EditSplit>
   <ProjectListSortColumn>3</ProjectListSortColumn>
   <ProjectListColumnSortDirection>1</ProjectListColumnSortDirection>
  </OpenTab>
  <OpenTab>
   <ObjContainerID>1566538455</ObjContainerID>
   <LeftSplitter>138</LeftSplitter>
   <RightSplitter>172</RightSplitter>
   <ScrollX>0</ScrollX>
   <ScrollY>0</ScrollY>
   <LastPositionH>64</LastPositionH>
   <LastPositionV>64</LastPositionV>
   <Control>0</Control>
  </OpenTab>
  <OpenTab>
   <ObjContainerID>1566538455</ObjContainerID>
   <AlternateEditorID>1</AlternateEditorID>
   <LeftSplitter>160</LeftSplitter>
   <EmptyEventState>0</EmptyEventState>
   <CodeItemID>0</CodeItemID>
  </OpenTab>
  <LastLocation>Window_XPathAnalyzer.Open</LastLocation>
  <EditBounds><Rect left="0" top="42" width="1280" height="754"/></EditBounds>
 </WindowState>
</block>
</RBProject>
