'	VB usage example for AltovaXML
'  	Purpose: 
'     -  Create an AltovaXML application class
'	  - Use the validator class to check that the input instance is well-formed
'    - Use the XSLT1 engine to copy the input instance 
'   note: for simplicity file names have been hard-coded, adjust the names as required. 
'

Option Explicit On 

Module Module1

    'These path names will have to be altered if AltovaXML is not installed to the default location,
    ' if you are using the 64-bit version of ALtovaXML or a different major version.
    Const C_infilename As String = "C:\Program files (x86)\Altova\altovaxml2012\AltovaXMLExamples\simple.xml"
    Const C_doesNotExist As String = "C:\Program files (x86)\Altova\altovaxml2012\AltovaXMLExamples\doesNotExist.xml"
    Const C_xslFilename As String = "C:\Program Files (x86)\Altova\AltovaXML2012\AltovaXMLExamples\CopyInputXSLT1.xsl"
    Const C_outFilename As String = "C:\program files (x86)\Altova\altovaxml2012\AltovaXMLExamples\out.xml"

    Sub Main()
        Dim objAltovaXML As Object
        Dim Application As Object
        Dim oVal As Object
        Dim ret As Long
        Dim xslt1 As Object
        Dim result As String
        Dim Msg As String

        On Error GoTo ErrHandler
        '=====================================AltovaXML is instantiated.
        objAltovaXML = CreateObject("AltovaXML.Application")
        oVal = objAltovaXML.XMLValidator
        ret = True
        '=====================================Make sure the file is wellformed
        oVal.InputXMLFileName = C_infilename
        ret = oVal.IsWellFormed()
        If (ret = True) Then
            'use XSLT1 to copy the file
            objAltovaXML.XSLT1.InputXMLFileName = C_infilename
            objAltovaXML.XSLT1.XSLFileName = C_xslFilename
            result = objAltovaXML.XSLT1.ExecuteAndGetResultAsString()
            MsgBox(result, MsgBoxStyle.Information, "Result string")
        Else
            MsgBox(objAltovaXML.XSLT1.LastErrorMessage, , "File not wellformed")
        End If
ErrHandler:
        ' Check for error, then show message.
        If Err.Number Then
            Msg = "Error # " & Str(Err.Number) & " was generated by " _
                & Err.Source & Chr(13) & Err.Description
            MsgBox(Msg)
        End If
        Err.Clear()
    End Sub

End Module
